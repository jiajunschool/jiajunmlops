2024-02-26 18:23:13,546:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:23:13,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:23:13,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:23:13,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:33:33,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:33:33,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:33:33,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:33:33,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:40:43,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:40:43,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:40:43,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:40:43,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:59:24,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:59:24,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:59:24,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 18:59:24,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:00:11,393:INFO:PyCaret ClassificationExperiment
2024-02-26 19:00:11,393:INFO:Logging name: clf-default-name
2024-02-26 19:00:11,394:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-26 19:00:11,394:INFO:version 3.2.0
2024-02-26 19:00:11,394:INFO:Initializing setup()
2024-02-26 19:00:11,394:INFO:self.USI: 45d9
2024-02-26 19:00:11,394:INFO:self._variable_keys: {'log_plots_param', 'logging_param', 'y_train', 'seed', '_ml_usecase', 'USI', 'target_param', 'gpu_param', 'X_test', 'idx', 'y', 'html_param', 'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'X', 'fold_generator', '_available_plots', 'data', 'exp_name_log', 'memory', 'exp_id', 'fold_groups_param', 'y_test', 'X_train', 'gpu_n_jobs_param', 'is_multiclass', 'fix_imbalance'}
2024-02-26 19:00:11,394:INFO:Checking environment
2024-02-26 19:00:11,394:INFO:python_version: 3.10.13
2024-02-26 19:00:11,394:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-26 19:00:11,394:INFO:machine: AMD64
2024-02-26 19:00:11,394:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-26 19:00:11,401:INFO:Memory: svmem(total=34204610560, available=12995420160, percent=62.0, used=21209190400, free=12995420160)
2024-02-26 19:00:11,402:INFO:Physical Core: 8
2024-02-26 19:00:11,402:INFO:Logical Core: 16
2024-02-26 19:00:11,402:INFO:Checking libraries
2024-02-26 19:00:11,402:INFO:System:
2024-02-26 19:00:11,402:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-26 19:00:11,402:INFO:executable: C:\Users\nasru\anaconda3\envs\mlops\python.exe
2024-02-26 19:00:11,402:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-26 19:00:11,402:INFO:PyCaret required dependencies:
2024-02-26 19:00:11,448:INFO:                 pip: 24.0
2024-02-26 19:00:11,448:INFO:          setuptools: 68.2.2
2024-02-26 19:00:11,448:INFO:             pycaret: 3.3.0
2024-02-26 19:00:11,448:INFO:             IPython: 8.22.1
2024-02-26 19:00:11,448:INFO:          ipywidgets: 8.1.2
2024-02-26 19:00:11,448:INFO:                tqdm: 4.66.1
2024-02-26 19:00:11,448:INFO:               numpy: 1.25.2
2024-02-26 19:00:11,448:INFO:              pandas: 1.5.3
2024-02-26 19:00:11,448:INFO:              jinja2: 3.1.3
2024-02-26 19:00:11,448:INFO:               scipy: 1.11.4
2024-02-26 19:00:11,449:INFO:              joblib: 1.3.2
2024-02-26 19:00:11,449:INFO:             sklearn: 1.4.1.post1
2024-02-26 19:00:11,449:INFO:                pyod: 1.1.3
2024-02-26 19:00:11,449:INFO:            imblearn: 0.12.0
2024-02-26 19:00:11,449:INFO:   category_encoders: 2.6.3
2024-02-26 19:00:11,449:INFO:            lightgbm: 4.1.0
2024-02-26 19:00:11,449:INFO:               numba: 0.59.0
2024-02-26 19:00:11,449:INFO:            requests: 2.31.0
2024-02-26 19:00:11,449:INFO:          matplotlib: 3.8.3
2024-02-26 19:00:11,449:INFO:          scikitplot: 0.3.7
2024-02-26 19:00:11,449:INFO:         yellowbrick: 1.5
2024-02-26 19:00:11,449:INFO:              plotly: 5.9.0
2024-02-26 19:00:11,449:INFO:    plotly-resampler: Not installed
2024-02-26 19:00:11,449:INFO:             kaleido: 0.2.1
2024-02-26 19:00:11,449:INFO:           schemdraw: 0.15
2024-02-26 19:00:11,449:INFO:         statsmodels: 0.14.1
2024-02-26 19:00:11,449:INFO:              sktime: 0.26.0
2024-02-26 19:00:11,449:INFO:               tbats: 1.1.3
2024-02-26 19:00:11,449:INFO:            pmdarima: 2.0.4
2024-02-26 19:00:11,449:INFO:              psutil: 5.9.8
2024-02-26 19:00:11,449:INFO:          markupsafe: 2.1.5
2024-02-26 19:00:11,450:INFO:             pickle5: Not installed
2024-02-26 19:00:11,450:INFO:         cloudpickle: 2.2.1
2024-02-26 19:00:11,450:INFO:         deprecation: 2.1.0
2024-02-26 19:00:11,450:INFO:              xxhash: 3.4.1
2024-02-26 19:00:11,450:INFO:           wurlitzer: 3.0.3
2024-02-26 19:00:11,450:INFO:PyCaret optional dependencies:
2024-02-26 19:00:11,468:INFO:                shap: Not installed
2024-02-26 19:00:11,468:INFO:           interpret: Not installed
2024-02-26 19:00:11,468:INFO:                umap: Not installed
2024-02-26 19:00:11,468:INFO:     ydata_profiling: Not installed
2024-02-26 19:00:11,468:INFO:  explainerdashboard: Not installed
2024-02-26 19:00:11,468:INFO:             autoviz: Not installed
2024-02-26 19:00:11,468:INFO:           fairlearn: Not installed
2024-02-26 19:00:11,469:INFO:          deepchecks: Not installed
2024-02-26 19:00:11,469:INFO:             xgboost: Not installed
2024-02-26 19:00:11,469:INFO:            catboost: Not installed
2024-02-26 19:00:11,469:INFO:              kmodes: Not installed
2024-02-26 19:00:11,469:INFO:             mlxtend: Not installed
2024-02-26 19:00:11,469:INFO:       statsforecast: Not installed
2024-02-26 19:00:11,469:INFO:        tune_sklearn: Not installed
2024-02-26 19:00:11,469:INFO:                 ray: Not installed
2024-02-26 19:00:11,469:INFO:            hyperopt: Not installed
2024-02-26 19:00:11,469:INFO:              optuna: Not installed
2024-02-26 19:00:11,469:INFO:               skopt: Not installed
2024-02-26 19:00:11,469:INFO:              mlflow: 2.9.2
2024-02-26 19:00:11,469:INFO:              gradio: Not installed
2024-02-26 19:00:11,470:INFO:             fastapi: Not installed
2024-02-26 19:00:11,470:INFO:             uvicorn: Not installed
2024-02-26 19:00:11,470:INFO:              m2cgen: Not installed
2024-02-26 19:00:11,470:INFO:           evidently: Not installed
2024-02-26 19:00:11,470:INFO:               fugue: Not installed
2024-02-26 19:00:11,470:INFO:           streamlit: Not installed
2024-02-26 19:00:11,470:INFO:             prophet: Not installed
2024-02-26 19:00:11,470:INFO:None
2024-02-26 19:00:11,470:INFO:Set up data.
2024-02-26 19:15:02,321:INFO:PyCaret ClassificationExperiment
2024-02-26 19:15:02,321:INFO:Logging name: clf-default-name
2024-02-26 19:15:02,321:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-26 19:15:02,321:INFO:version 3.2.0
2024-02-26 19:15:02,321:INFO:Initializing setup()
2024-02-26 19:15:02,321:INFO:self.USI: ada1
2024-02-26 19:15:02,322:INFO:self._variable_keys: {'log_plots_param', 'logging_param', 'y_train', 'seed', '_ml_usecase', 'USI', 'target_param', 'gpu_param', 'X_test', 'idx', 'y', 'html_param', 'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'X', 'fold_generator', '_available_plots', 'data', 'exp_name_log', 'memory', 'exp_id', 'fold_groups_param', 'y_test', 'X_train', 'gpu_n_jobs_param', 'is_multiclass', 'fix_imbalance'}
2024-02-26 19:15:02,322:INFO:Checking environment
2024-02-26 19:15:02,322:INFO:python_version: 3.10.13
2024-02-26 19:15:02,322:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-26 19:15:02,322:INFO:machine: AMD64
2024-02-26 19:15:02,322:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-26 19:15:02,329:INFO:Memory: svmem(total=34204610560, available=13896384512, percent=59.4, used=20308226048, free=13896384512)
2024-02-26 19:15:02,330:INFO:Physical Core: 8
2024-02-26 19:15:02,330:INFO:Logical Core: 16
2024-02-26 19:15:02,330:INFO:Checking libraries
2024-02-26 19:15:02,330:INFO:System:
2024-02-26 19:15:02,330:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-26 19:15:02,330:INFO:executable: C:\Users\nasru\anaconda3\envs\mlops\python.exe
2024-02-26 19:15:02,330:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-26 19:15:02,330:INFO:PyCaret required dependencies:
2024-02-26 19:15:02,331:INFO:                 pip: 24.0
2024-02-26 19:15:02,331:INFO:          setuptools: 68.2.2
2024-02-26 19:15:02,331:INFO:             pycaret: 3.3.0
2024-02-26 19:15:02,331:INFO:             IPython: 8.22.1
2024-02-26 19:15:02,331:INFO:          ipywidgets: 8.1.2
2024-02-26 19:15:02,331:INFO:                tqdm: 4.66.1
2024-02-26 19:15:02,331:INFO:               numpy: 1.25.2
2024-02-26 19:15:02,331:INFO:              pandas: 1.5.3
2024-02-26 19:15:02,331:INFO:              jinja2: 3.1.3
2024-02-26 19:15:02,331:INFO:               scipy: 1.11.4
2024-02-26 19:15:02,331:INFO:              joblib: 1.3.2
2024-02-26 19:15:02,331:INFO:             sklearn: 1.4.1.post1
2024-02-26 19:15:02,331:INFO:                pyod: 1.1.3
2024-02-26 19:15:02,331:INFO:            imblearn: 0.12.0
2024-02-26 19:15:02,331:INFO:   category_encoders: 2.6.3
2024-02-26 19:15:02,331:INFO:            lightgbm: 4.1.0
2024-02-26 19:15:02,331:INFO:               numba: 0.59.0
2024-02-26 19:15:02,331:INFO:            requests: 2.31.0
2024-02-26 19:15:02,333:INFO:          matplotlib: 3.8.3
2024-02-26 19:15:02,333:INFO:          scikitplot: 0.3.7
2024-02-26 19:15:02,333:INFO:         yellowbrick: 1.5
2024-02-26 19:15:02,333:INFO:              plotly: 5.9.0
2024-02-26 19:15:02,333:INFO:    plotly-resampler: Not installed
2024-02-26 19:15:02,333:INFO:             kaleido: 0.2.1
2024-02-26 19:15:02,333:INFO:           schemdraw: 0.15
2024-02-26 19:15:02,333:INFO:         statsmodels: 0.14.1
2024-02-26 19:15:02,333:INFO:              sktime: 0.26.0
2024-02-26 19:15:02,333:INFO:               tbats: 1.1.3
2024-02-26 19:15:02,333:INFO:            pmdarima: 2.0.4
2024-02-26 19:15:02,333:INFO:              psutil: 5.9.8
2024-02-26 19:15:02,333:INFO:          markupsafe: 2.1.5
2024-02-26 19:15:02,334:INFO:             pickle5: Not installed
2024-02-26 19:15:02,334:INFO:         cloudpickle: 2.2.1
2024-02-26 19:15:02,334:INFO:         deprecation: 2.1.0
2024-02-26 19:15:02,334:INFO:              xxhash: 3.4.1
2024-02-26 19:15:02,334:INFO:           wurlitzer: 3.0.3
2024-02-26 19:15:02,334:INFO:PyCaret optional dependencies:
2024-02-26 19:15:02,334:INFO:                shap: Not installed
2024-02-26 19:15:02,334:INFO:           interpret: Not installed
2024-02-26 19:15:02,334:INFO:                umap: Not installed
2024-02-26 19:15:02,334:INFO:     ydata_profiling: Not installed
2024-02-26 19:15:02,335:INFO:  explainerdashboard: Not installed
2024-02-26 19:15:02,335:INFO:             autoviz: Not installed
2024-02-26 19:15:02,335:INFO:           fairlearn: Not installed
2024-02-26 19:15:02,335:INFO:          deepchecks: Not installed
2024-02-26 19:15:02,335:INFO:             xgboost: Not installed
2024-02-26 19:15:02,335:INFO:            catboost: Not installed
2024-02-26 19:15:02,335:INFO:              kmodes: Not installed
2024-02-26 19:15:02,335:INFO:             mlxtend: Not installed
2024-02-26 19:15:02,335:INFO:       statsforecast: Not installed
2024-02-26 19:15:02,335:INFO:        tune_sklearn: Not installed
2024-02-26 19:15:02,335:INFO:                 ray: Not installed
2024-02-26 19:15:02,336:INFO:            hyperopt: Not installed
2024-02-26 19:15:02,336:INFO:              optuna: Not installed
2024-02-26 19:15:02,336:INFO:               skopt: Not installed
2024-02-26 19:15:02,336:INFO:              mlflow: 2.9.2
2024-02-26 19:15:02,336:INFO:              gradio: Not installed
2024-02-26 19:15:02,336:INFO:             fastapi: Not installed
2024-02-26 19:15:02,336:INFO:             uvicorn: Not installed
2024-02-26 19:15:02,336:INFO:              m2cgen: Not installed
2024-02-26 19:15:02,336:INFO:           evidently: Not installed
2024-02-26 19:15:02,336:INFO:               fugue: Not installed
2024-02-26 19:15:02,336:INFO:           streamlit: Not installed
2024-02-26 19:15:02,336:INFO:             prophet: Not installed
2024-02-26 19:15:02,336:INFO:None
2024-02-26 19:15:02,336:INFO:Set up data.
2024-02-26 19:17:28,382:INFO:PyCaret ClassificationExperiment
2024-02-26 19:17:28,382:INFO:Logging name: clf-default-name
2024-02-26 19:17:28,382:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-26 19:17:28,383:INFO:version 3.2.0
2024-02-26 19:17:28,383:INFO:Initializing setup()
2024-02-26 19:17:28,383:INFO:self.USI: d94c
2024-02-26 19:17:28,383:INFO:self._variable_keys: {'log_plots_param', 'logging_param', 'y_train', 'seed', '_ml_usecase', 'USI', 'target_param', 'gpu_param', 'X_test', 'idx', 'y', 'html_param', 'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'X', 'fold_generator', '_available_plots', 'data', 'exp_name_log', 'memory', 'exp_id', 'fold_groups_param', 'y_test', 'X_train', 'gpu_n_jobs_param', 'is_multiclass', 'fix_imbalance'}
2024-02-26 19:17:28,383:INFO:Checking environment
2024-02-26 19:17:28,383:INFO:python_version: 3.10.13
2024-02-26 19:17:28,383:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-26 19:17:28,383:INFO:machine: AMD64
2024-02-26 19:17:28,383:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-26 19:17:28,389:INFO:Memory: svmem(total=34204610560, available=13726330880, percent=59.9, used=20478279680, free=13726330880)
2024-02-26 19:17:28,389:INFO:Physical Core: 8
2024-02-26 19:17:28,389:INFO:Logical Core: 16
2024-02-26 19:17:28,390:INFO:Checking libraries
2024-02-26 19:17:28,390:INFO:System:
2024-02-26 19:17:28,390:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-26 19:17:28,390:INFO:executable: C:\Users\nasru\anaconda3\envs\mlops\python.exe
2024-02-26 19:17:28,390:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-26 19:17:28,390:INFO:PyCaret required dependencies:
2024-02-26 19:17:28,390:INFO:                 pip: 24.0
2024-02-26 19:17:28,390:INFO:          setuptools: 68.2.2
2024-02-26 19:17:28,390:INFO:             pycaret: 3.3.0
2024-02-26 19:17:28,390:INFO:             IPython: 8.22.1
2024-02-26 19:17:28,390:INFO:          ipywidgets: 8.1.2
2024-02-26 19:17:28,390:INFO:                tqdm: 4.66.1
2024-02-26 19:17:28,390:INFO:               numpy: 1.25.2
2024-02-26 19:17:28,390:INFO:              pandas: 1.5.3
2024-02-26 19:17:28,390:INFO:              jinja2: 3.1.3
2024-02-26 19:17:28,391:INFO:               scipy: 1.11.4
2024-02-26 19:17:28,391:INFO:              joblib: 1.3.2
2024-02-26 19:17:28,391:INFO:             sklearn: 1.4.1.post1
2024-02-26 19:17:28,391:INFO:                pyod: 1.1.3
2024-02-26 19:17:28,391:INFO:            imblearn: 0.12.0
2024-02-26 19:17:28,391:INFO:   category_encoders: 2.6.3
2024-02-26 19:17:28,391:INFO:            lightgbm: 4.1.0
2024-02-26 19:17:28,391:INFO:               numba: 0.59.0
2024-02-26 19:17:28,391:INFO:            requests: 2.31.0
2024-02-26 19:17:28,391:INFO:          matplotlib: 3.8.3
2024-02-26 19:17:28,391:INFO:          scikitplot: 0.3.7
2024-02-26 19:17:28,391:INFO:         yellowbrick: 1.5
2024-02-26 19:17:28,391:INFO:              plotly: 5.9.0
2024-02-26 19:17:28,391:INFO:    plotly-resampler: Not installed
2024-02-26 19:17:28,391:INFO:             kaleido: 0.2.1
2024-02-26 19:17:28,391:INFO:           schemdraw: 0.15
2024-02-26 19:17:28,392:INFO:         statsmodels: 0.14.1
2024-02-26 19:17:28,392:INFO:              sktime: 0.26.0
2024-02-26 19:17:28,392:INFO:               tbats: 1.1.3
2024-02-26 19:17:28,392:INFO:            pmdarima: 2.0.4
2024-02-26 19:17:28,392:INFO:              psutil: 5.9.8
2024-02-26 19:17:28,392:INFO:          markupsafe: 2.1.5
2024-02-26 19:17:28,392:INFO:             pickle5: Not installed
2024-02-26 19:17:28,392:INFO:         cloudpickle: 2.2.1
2024-02-26 19:17:28,392:INFO:         deprecation: 2.1.0
2024-02-26 19:17:28,392:INFO:              xxhash: 3.4.1
2024-02-26 19:17:28,392:INFO:           wurlitzer: 3.0.3
2024-02-26 19:17:28,392:INFO:PyCaret optional dependencies:
2024-02-26 19:17:28,392:INFO:                shap: Not installed
2024-02-26 19:17:28,392:INFO:           interpret: Not installed
2024-02-26 19:17:28,392:INFO:                umap: Not installed
2024-02-26 19:17:28,392:INFO:     ydata_profiling: Not installed
2024-02-26 19:17:28,393:INFO:  explainerdashboard: Not installed
2024-02-26 19:17:28,393:INFO:             autoviz: Not installed
2024-02-26 19:17:28,393:INFO:           fairlearn: Not installed
2024-02-26 19:17:28,393:INFO:          deepchecks: Not installed
2024-02-26 19:17:28,393:INFO:             xgboost: Not installed
2024-02-26 19:17:28,393:INFO:            catboost: Not installed
2024-02-26 19:17:28,393:INFO:              kmodes: Not installed
2024-02-26 19:17:28,393:INFO:             mlxtend: Not installed
2024-02-26 19:17:28,393:INFO:       statsforecast: Not installed
2024-02-26 19:17:28,393:INFO:        tune_sklearn: Not installed
2024-02-26 19:17:28,393:INFO:                 ray: Not installed
2024-02-26 19:17:28,393:INFO:            hyperopt: Not installed
2024-02-26 19:17:28,393:INFO:              optuna: Not installed
2024-02-26 19:17:28,393:INFO:               skopt: Not installed
2024-02-26 19:17:28,393:INFO:              mlflow: 2.9.2
2024-02-26 19:17:28,393:INFO:              gradio: Not installed
2024-02-26 19:17:28,394:INFO:             fastapi: Not installed
2024-02-26 19:17:28,394:INFO:             uvicorn: Not installed
2024-02-26 19:17:28,394:INFO:              m2cgen: Not installed
2024-02-26 19:17:28,394:INFO:           evidently: Not installed
2024-02-26 19:17:28,394:INFO:               fugue: Not installed
2024-02-26 19:17:28,394:INFO:           streamlit: Not installed
2024-02-26 19:17:28,394:INFO:             prophet: Not installed
2024-02-26 19:17:28,394:INFO:None
2024-02-26 19:17:28,394:INFO:Set up data.
2024-02-26 19:17:28,427:INFO:Set up folding strategy.
2024-02-26 19:17:28,427:INFO:Set up train/test split.
2024-02-26 19:17:28,446:INFO:Set up index.
2024-02-26 19:17:28,446:INFO:Assigning column types.
2024-02-26 19:17:28,449:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-26 19:17:28,492:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 19:17:28,494:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:17:28,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,573:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 19:17:28,574:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:17:28,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,607:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-26 19:17:28,657:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:17:28,684:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,734:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:17:28,762:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,763:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-26 19:17:28,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:28,961:INFO:Preparing preprocessing pipeline...
2024-02-26 19:17:28,962:INFO:Set up label encoding.
2024-02-26 19:17:28,962:INFO:Set up simple imputation.
2024-02-26 19:17:28,970:INFO:Set up encoding of ordinal features.
2024-02-26 19:17:28,979:INFO:Set up encoding of categorical features.
2024-02-26 19:17:28,980:INFO:Set up column name cleaning.
2024-02-26 19:17:29,610:INFO:Finished creating preprocessing pipeline.
2024-02-26 19:17:29,684:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-26 19:17:29,684:INFO:Creating final display dataframe.
2024-02-26 19:17:30,551:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape               (8124, 23)
5        Transformed data shape              (8124, 111)
6   Transformed train set shape              (5686, 111)
7    Transformed test set shape              (2438, 111)
8              Ordinal features                        5
9          Categorical features                       22
10     Rows with missing values                     2.4%
11                   Preprocess                     True
12              Imputation type                   simple
13           Numeric imputation                     mean
14       Categorical imputation                     mode
15     Maximum one-hot encoding                       25
16              Encoding method                     None
17               Fold Generator          StratifiedKFold
18                  Fold Number                       10
19                     CPU Jobs                       -1
20                      Use GPU                    False
21               Log Experiment                    False
22              Experiment Name         clf-default-name
23                          USI                     d94c
2024-02-26 19:17:30,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:30,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:30,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:30,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:17:30,706:INFO:setup() successfully completed in 2.34s...............
2024-02-26 19:20:31,768:INFO:PyCaret ClassificationExperiment
2024-02-26 19:20:31,768:INFO:Logging name: clf-default-name
2024-02-26 19:20:31,768:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-26 19:20:31,768:INFO:version 3.2.0
2024-02-26 19:20:31,768:INFO:Initializing setup()
2024-02-26 19:20:31,768:INFO:self.USI: 2a80
2024-02-26 19:20:31,768:INFO:self._variable_keys: {'log_plots_param', 'logging_param', 'y_train', 'seed', '_ml_usecase', 'USI', 'target_param', 'gpu_param', 'X_test', 'idx', 'y', 'html_param', 'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'X', 'fold_generator', '_available_plots', 'data', 'exp_name_log', 'memory', 'exp_id', 'fold_groups_param', 'y_test', 'X_train', 'gpu_n_jobs_param', 'is_multiclass', 'fix_imbalance'}
2024-02-26 19:20:31,768:INFO:Checking environment
2024-02-26 19:20:31,768:INFO:python_version: 3.10.13
2024-02-26 19:20:31,768:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-26 19:20:31,769:INFO:machine: AMD64
2024-02-26 19:20:31,769:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-26 19:20:31,776:INFO:Memory: svmem(total=34204610560, available=13933580288, percent=59.3, used=20271030272, free=13933580288)
2024-02-26 19:20:31,776:INFO:Physical Core: 8
2024-02-26 19:20:31,776:INFO:Logical Core: 16
2024-02-26 19:20:31,776:INFO:Checking libraries
2024-02-26 19:20:31,776:INFO:System:
2024-02-26 19:20:31,776:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-26 19:20:31,776:INFO:executable: C:\Users\nasru\anaconda3\envs\mlops\python.exe
2024-02-26 19:20:31,776:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-26 19:20:31,776:INFO:PyCaret required dependencies:
2024-02-26 19:20:31,776:INFO:                 pip: 24.0
2024-02-26 19:20:31,776:INFO:          setuptools: 68.2.2
2024-02-26 19:20:31,777:INFO:             pycaret: 3.3.0
2024-02-26 19:20:31,777:INFO:             IPython: 8.22.1
2024-02-26 19:20:31,777:INFO:          ipywidgets: 8.1.2
2024-02-26 19:20:31,777:INFO:                tqdm: 4.66.1
2024-02-26 19:20:31,777:INFO:               numpy: 1.25.2
2024-02-26 19:20:31,777:INFO:              pandas: 1.5.3
2024-02-26 19:20:31,777:INFO:              jinja2: 3.1.3
2024-02-26 19:20:31,777:INFO:               scipy: 1.11.4
2024-02-26 19:20:31,777:INFO:              joblib: 1.3.2
2024-02-26 19:20:31,777:INFO:             sklearn: 1.4.1.post1
2024-02-26 19:20:31,777:INFO:                pyod: 1.1.3
2024-02-26 19:20:31,777:INFO:            imblearn: 0.12.0
2024-02-26 19:20:31,777:INFO:   category_encoders: 2.6.3
2024-02-26 19:20:31,777:INFO:            lightgbm: 4.1.0
2024-02-26 19:20:31,777:INFO:               numba: 0.59.0
2024-02-26 19:20:31,777:INFO:            requests: 2.31.0
2024-02-26 19:20:31,777:INFO:          matplotlib: 3.8.3
2024-02-26 19:20:31,778:INFO:          scikitplot: 0.3.7
2024-02-26 19:20:31,778:INFO:         yellowbrick: 1.5
2024-02-26 19:20:31,778:INFO:              plotly: 5.9.0
2024-02-26 19:20:31,778:INFO:    plotly-resampler: Not installed
2024-02-26 19:20:31,778:INFO:             kaleido: 0.2.1
2024-02-26 19:20:31,778:INFO:           schemdraw: 0.15
2024-02-26 19:20:31,778:INFO:         statsmodels: 0.14.1
2024-02-26 19:20:31,778:INFO:              sktime: 0.26.0
2024-02-26 19:20:31,778:INFO:               tbats: 1.1.3
2024-02-26 19:20:31,778:INFO:            pmdarima: 2.0.4
2024-02-26 19:20:31,778:INFO:              psutil: 5.9.8
2024-02-26 19:20:31,778:INFO:          markupsafe: 2.1.5
2024-02-26 19:20:31,778:INFO:             pickle5: Not installed
2024-02-26 19:20:31,778:INFO:         cloudpickle: 2.2.1
2024-02-26 19:20:31,778:INFO:         deprecation: 2.1.0
2024-02-26 19:20:31,778:INFO:              xxhash: 3.4.1
2024-02-26 19:20:31,778:INFO:           wurlitzer: 3.0.3
2024-02-26 19:20:31,778:INFO:PyCaret optional dependencies:
2024-02-26 19:20:31,779:INFO:                shap: Not installed
2024-02-26 19:20:31,779:INFO:           interpret: Not installed
2024-02-26 19:20:31,779:INFO:                umap: Not installed
2024-02-26 19:20:31,779:INFO:     ydata_profiling: Not installed
2024-02-26 19:20:31,779:INFO:  explainerdashboard: Not installed
2024-02-26 19:20:31,779:INFO:             autoviz: Not installed
2024-02-26 19:20:31,779:INFO:           fairlearn: Not installed
2024-02-26 19:20:31,779:INFO:          deepchecks: Not installed
2024-02-26 19:20:31,779:INFO:             xgboost: Not installed
2024-02-26 19:20:31,779:INFO:            catboost: Not installed
2024-02-26 19:20:31,779:INFO:              kmodes: Not installed
2024-02-26 19:20:31,779:INFO:             mlxtend: Not installed
2024-02-26 19:20:31,779:INFO:       statsforecast: Not installed
2024-02-26 19:20:31,779:INFO:        tune_sklearn: Not installed
2024-02-26 19:20:31,779:INFO:                 ray: Not installed
2024-02-26 19:20:31,780:INFO:            hyperopt: Not installed
2024-02-26 19:20:31,780:INFO:              optuna: Not installed
2024-02-26 19:20:31,780:INFO:               skopt: Not installed
2024-02-26 19:20:31,780:INFO:              mlflow: 2.9.2
2024-02-26 19:20:31,780:INFO:              gradio: Not installed
2024-02-26 19:20:31,780:INFO:             fastapi: Not installed
2024-02-26 19:20:31,780:INFO:             uvicorn: Not installed
2024-02-26 19:20:31,780:INFO:              m2cgen: Not installed
2024-02-26 19:20:31,780:INFO:           evidently: Not installed
2024-02-26 19:20:31,780:INFO:               fugue: Not installed
2024-02-26 19:20:31,780:INFO:           streamlit: Not installed
2024-02-26 19:20:31,780:INFO:             prophet: Not installed
2024-02-26 19:20:31,780:INFO:None
2024-02-26 19:20:31,780:INFO:Set up data.
2024-02-26 19:20:31,791:INFO:Set up folding strategy.
2024-02-26 19:20:31,791:INFO:Set up train/test split.
2024-02-26 19:20:31,803:INFO:Set up index.
2024-02-26 19:20:31,803:INFO:Assigning column types.
2024-02-26 19:20:31,807:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-26 19:20:31,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 19:20:31,867:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:20:31,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:31,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:31,943:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 19:20:31,944:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:20:31,974:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:31,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:31,975:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-26 19:20:32,025:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:20:32,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,109:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:20:32,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,142:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-26 19:20:32,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,301:INFO:Preparing preprocessing pipeline...
2024-02-26 19:20:32,302:INFO:Set up label encoding.
2024-02-26 19:20:32,302:INFO:Set up simple imputation.
2024-02-26 19:20:32,306:INFO:Set up encoding of ordinal features.
2024-02-26 19:20:32,307:INFO:Set up encoding of categorical features.
2024-02-26 19:20:32,307:INFO:Set up column name cleaning.
2024-02-26 19:20:32,455:INFO:Finished creating preprocessing pipeline.
2024-02-26 19:20:32,476:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-26 19:20:32,477:INFO:Creating final display dataframe.
2024-02-26 19:20:32,787:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape                (8124, 6)
5        Transformed data shape               (8124, 31)
6   Transformed train set shape               (5686, 31)
7    Transformed test set shape               (2438, 31)
8              Ordinal features                        1
9          Categorical features                        5
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16               Fold Generator          StratifiedKFold
17                  Fold Number                       10
18                     CPU Jobs                       -1
19                      Use GPU                    False
20               Log Experiment                    False
21              Experiment Name         clf-default-name
22                          USI                     2a80
2024-02-26 19:20:32,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:20:32,968:INFO:setup() successfully completed in 1.22s...............
2024-02-26 19:21:21,079:INFO:PyCaret ClassificationExperiment
2024-02-26 19:21:21,079:INFO:Logging name: clf-default-name
2024-02-26 19:21:21,080:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-26 19:21:21,080:INFO:version 3.2.0
2024-02-26 19:21:21,080:INFO:Initializing setup()
2024-02-26 19:21:21,080:INFO:self.USI: 03a7
2024-02-26 19:21:21,080:INFO:self._variable_keys: {'log_plots_param', 'logging_param', 'y_train', 'seed', '_ml_usecase', 'USI', 'target_param', 'gpu_param', 'X_test', 'idx', 'y', 'html_param', 'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'X', 'fold_generator', '_available_plots', 'data', 'exp_name_log', 'memory', 'exp_id', 'fold_groups_param', 'y_test', 'X_train', 'gpu_n_jobs_param', 'is_multiclass', 'fix_imbalance'}
2024-02-26 19:21:21,080:INFO:Checking environment
2024-02-26 19:21:21,080:INFO:python_version: 3.10.13
2024-02-26 19:21:21,080:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-26 19:21:21,080:INFO:machine: AMD64
2024-02-26 19:21:21,080:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-26 19:21:21,087:INFO:Memory: svmem(total=34204610560, available=14220402688, percent=58.4, used=19984207872, free=14220402688)
2024-02-26 19:21:21,087:INFO:Physical Core: 8
2024-02-26 19:21:21,087:INFO:Logical Core: 16
2024-02-26 19:21:21,087:INFO:Checking libraries
2024-02-26 19:21:21,087:INFO:System:
2024-02-26 19:21:21,087:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-26 19:21:21,087:INFO:executable: C:\Users\nasru\anaconda3\envs\mlops\python.exe
2024-02-26 19:21:21,087:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-26 19:21:21,087:INFO:PyCaret required dependencies:
2024-02-26 19:21:21,087:INFO:                 pip: 24.0
2024-02-26 19:21:21,087:INFO:          setuptools: 68.2.2
2024-02-26 19:21:21,087:INFO:             pycaret: 3.3.0
2024-02-26 19:21:21,087:INFO:             IPython: 8.22.1
2024-02-26 19:21:21,087:INFO:          ipywidgets: 8.1.2
2024-02-26 19:21:21,087:INFO:                tqdm: 4.66.1
2024-02-26 19:21:21,087:INFO:               numpy: 1.25.2
2024-02-26 19:21:21,087:INFO:              pandas: 1.5.3
2024-02-26 19:21:21,087:INFO:              jinja2: 3.1.3
2024-02-26 19:21:21,087:INFO:               scipy: 1.11.4
2024-02-26 19:21:21,089:INFO:              joblib: 1.3.2
2024-02-26 19:21:21,089:INFO:             sklearn: 1.4.1.post1
2024-02-26 19:21:21,089:INFO:                pyod: 1.1.3
2024-02-26 19:21:21,089:INFO:            imblearn: 0.12.0
2024-02-26 19:21:21,089:INFO:   category_encoders: 2.6.3
2024-02-26 19:21:21,089:INFO:            lightgbm: 4.1.0
2024-02-26 19:21:21,089:INFO:               numba: 0.59.0
2024-02-26 19:21:21,089:INFO:            requests: 2.31.0
2024-02-26 19:21:21,089:INFO:          matplotlib: 3.8.3
2024-02-26 19:21:21,089:INFO:          scikitplot: 0.3.7
2024-02-26 19:21:21,089:INFO:         yellowbrick: 1.5
2024-02-26 19:21:21,089:INFO:              plotly: 5.9.0
2024-02-26 19:21:21,089:INFO:    plotly-resampler: Not installed
2024-02-26 19:21:21,090:INFO:             kaleido: 0.2.1
2024-02-26 19:21:21,090:INFO:           schemdraw: 0.15
2024-02-26 19:21:21,090:INFO:         statsmodels: 0.14.1
2024-02-26 19:21:21,090:INFO:              sktime: 0.26.0
2024-02-26 19:21:21,090:INFO:               tbats: 1.1.3
2024-02-26 19:21:21,090:INFO:            pmdarima: 2.0.4
2024-02-26 19:21:21,090:INFO:              psutil: 5.9.8
2024-02-26 19:21:21,090:INFO:          markupsafe: 2.1.5
2024-02-26 19:21:21,090:INFO:             pickle5: Not installed
2024-02-26 19:21:21,090:INFO:         cloudpickle: 2.2.1
2024-02-26 19:21:21,091:INFO:         deprecation: 2.1.0
2024-02-26 19:21:21,091:INFO:              xxhash: 3.4.1
2024-02-26 19:21:21,091:INFO:           wurlitzer: 3.0.3
2024-02-26 19:21:21,091:INFO:PyCaret optional dependencies:
2024-02-26 19:21:21,091:INFO:                shap: Not installed
2024-02-26 19:21:21,091:INFO:           interpret: Not installed
2024-02-26 19:21:21,091:INFO:                umap: Not installed
2024-02-26 19:21:21,091:INFO:     ydata_profiling: Not installed
2024-02-26 19:21:21,091:INFO:  explainerdashboard: Not installed
2024-02-26 19:21:21,091:INFO:             autoviz: Not installed
2024-02-26 19:21:21,091:INFO:           fairlearn: Not installed
2024-02-26 19:21:21,091:INFO:          deepchecks: Not installed
2024-02-26 19:21:21,092:INFO:             xgboost: Not installed
2024-02-26 19:21:21,092:INFO:            catboost: Not installed
2024-02-26 19:21:21,092:INFO:              kmodes: Not installed
2024-02-26 19:21:21,092:INFO:             mlxtend: Not installed
2024-02-26 19:21:21,092:INFO:       statsforecast: Not installed
2024-02-26 19:21:21,092:INFO:        tune_sklearn: Not installed
2024-02-26 19:21:21,092:INFO:                 ray: Not installed
2024-02-26 19:21:21,092:INFO:            hyperopt: Not installed
2024-02-26 19:21:21,092:INFO:              optuna: Not installed
2024-02-26 19:21:21,092:INFO:               skopt: Not installed
2024-02-26 19:21:21,092:INFO:              mlflow: 2.9.2
2024-02-26 19:21:21,093:INFO:              gradio: Not installed
2024-02-26 19:21:21,093:INFO:             fastapi: Not installed
2024-02-26 19:21:21,093:INFO:             uvicorn: Not installed
2024-02-26 19:21:21,093:INFO:              m2cgen: Not installed
2024-02-26 19:21:21,093:INFO:           evidently: Not installed
2024-02-26 19:21:21,093:INFO:               fugue: Not installed
2024-02-26 19:21:21,093:INFO:           streamlit: Not installed
2024-02-26 19:21:21,093:INFO:             prophet: Not installed
2024-02-26 19:21:21,093:INFO:None
2024-02-26 19:21:21,093:INFO:Set up data.
2024-02-26 19:21:21,101:INFO:Set up folding strategy.
2024-02-26 19:21:21,101:INFO:Set up train/test split.
2024-02-26 19:21:21,113:INFO:Set up index.
2024-02-26 19:21:21,113:INFO:Assigning column types.
2024-02-26 19:21:21,118:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-26 19:21:21,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 19:21:21,220:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:21:21,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,380:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 19:21:21,382:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:21:21,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,426:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-26 19:21:21,482:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:21:21,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,574:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:21:21,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,603:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-26 19:21:21,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,684:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,758:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:21,761:INFO:Preparing preprocessing pipeline...
2024-02-26 19:21:21,762:INFO:Set up label encoding.
2024-02-26 19:21:21,762:INFO:Set up simple imputation.
2024-02-26 19:21:21,765:INFO:Set up encoding of ordinal features.
2024-02-26 19:21:21,766:INFO:Set up encoding of categorical features.
2024-02-26 19:21:21,766:INFO:Set up column name cleaning.
2024-02-26 19:21:21,908:INFO:Finished creating preprocessing pipeline.
2024-02-26 19:21:21,928:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-26 19:21:21,928:INFO:Creating final display dataframe.
2024-02-26 19:21:22,268:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape                (8124, 6)
5        Transformed data shape               (8124, 31)
6   Transformed train set shape               (5686, 31)
7    Transformed test set shape               (2438, 31)
8              Ordinal features                        1
9          Categorical features                        5
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16               Fold Generator          StratifiedKFold
17                  Fold Number                       10
18                     CPU Jobs                       -1
19                      Use GPU                    False
20               Log Experiment                    False
21              Experiment Name         clf-default-name
22                          USI                     03a7
2024-02-26 19:21:22,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:22,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:22,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:22,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:21:22,435:INFO:setup() successfully completed in 1.37s...............
2024-02-26 19:21:23,791:INFO:Initializing compare_models()
2024-02-26 19:21:23,791:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-26 19:21:23,791:INFO:Checking exceptions
2024-02-26 19:21:23,795:INFO:Preparing display monitor
2024-02-26 19:21:23,827:INFO:Initializing Logistic Regression
2024-02-26 19:21:23,828:INFO:Total runtime is 1.6721089680989585e-05 minutes
2024-02-26 19:21:23,832:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:23,832:INFO:Initializing create_model()
2024-02-26 19:21:23,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:23,832:INFO:Checking exceptions
2024-02-26 19:21:23,833:INFO:Importing libraries
2024-02-26 19:21:23,833:INFO:Copying training dataset
2024-02-26 19:21:23,839:INFO:Defining folds
2024-02-26 19:21:23,839:INFO:Declaring metric variables
2024-02-26 19:21:23,844:INFO:Importing untrained model
2024-02-26 19:21:23,847:INFO:Logistic Regression Imported successfully
2024-02-26 19:21:23,861:INFO:Starting cross validation
2024-02-26 19:21:23,872:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:30,096:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,099:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,102:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,104:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,107:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,110:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,114:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,114:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,117:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,117:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,118:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,121:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,124:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,124:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,125:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,127:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,129:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,130:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,132:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,138:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,138:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,139:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,140:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,141:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,143:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,148:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,151:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,153:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,164:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:30,181:INFO:Calculating mean and std
2024-02-26 19:21:30,183:INFO:Creating metrics dataframe
2024-02-26 19:21:30,191:INFO:Uploading results into container
2024-02-26 19:21:30,193:INFO:Uploading model into container now
2024-02-26 19:21:30,194:INFO:_master_model_container: 1
2024-02-26 19:21:30,194:INFO:_display_container: 2
2024-02-26 19:21:30,195:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-26 19:21:30,195:INFO:create_model() successfully completed......................................
2024-02-26 19:21:30,372:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:30,372:INFO:Creating metrics dataframe
2024-02-26 19:21:30,379:INFO:Initializing K Neighbors Classifier
2024-02-26 19:21:30,379:INFO:Total runtime is 0.10921018123626709 minutes
2024-02-26 19:21:30,384:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:30,384:INFO:Initializing create_model()
2024-02-26 19:21:30,384:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:30,384:INFO:Checking exceptions
2024-02-26 19:21:30,385:INFO:Importing libraries
2024-02-26 19:21:30,385:INFO:Copying training dataset
2024-02-26 19:21:30,389:INFO:Defining folds
2024-02-26 19:21:30,389:INFO:Declaring metric variables
2024-02-26 19:21:30,393:INFO:Importing untrained model
2024-02-26 19:21:30,397:INFO:K Neighbors Classifier Imported successfully
2024-02-26 19:21:30,406:INFO:Starting cross validation
2024-02-26 19:21:30,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:31,079:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:31,080:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:31,082:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:31,082:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:31,090:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:31,091:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:31,094:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:31,094:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:31,101:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:31,101:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:31,105:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:31,105:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,240:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,245:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,247:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,250:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,256:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,259:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,260:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,262:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,267:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,271:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,277:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,279:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,287:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,291:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,293:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,298:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,298:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,304:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,314:INFO:Calculating mean and std
2024-02-26 19:21:34,317:INFO:Creating metrics dataframe
2024-02-26 19:21:34,324:INFO:Uploading results into container
2024-02-26 19:21:34,325:INFO:Uploading model into container now
2024-02-26 19:21:34,326:INFO:_master_model_container: 2
2024-02-26 19:21:34,326:INFO:_display_container: 2
2024-02-26 19:21:34,327:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-26 19:21:34,327:INFO:create_model() successfully completed......................................
2024-02-26 19:21:34,464:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:34,464:INFO:Creating metrics dataframe
2024-02-26 19:21:34,472:INFO:Initializing Naive Bayes
2024-02-26 19:21:34,473:INFO:Total runtime is 0.17743919293085736 minutes
2024-02-26 19:21:34,477:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:34,477:INFO:Initializing create_model()
2024-02-26 19:21:34,477:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:34,477:INFO:Checking exceptions
2024-02-26 19:21:34,477:INFO:Importing libraries
2024-02-26 19:21:34,478:INFO:Copying training dataset
2024-02-26 19:21:34,483:INFO:Defining folds
2024-02-26 19:21:34,483:INFO:Declaring metric variables
2024-02-26 19:21:34,486:INFO:Importing untrained model
2024-02-26 19:21:34,491:INFO:Naive Bayes Imported successfully
2024-02-26 19:21:34,499:INFO:Starting cross validation
2024-02-26 19:21:34,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:34,760:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,765:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,765:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,766:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,768:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,771:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,773:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,774:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,776:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,776:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,778:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,779:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,781:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,781:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,782:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,783:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,784:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,785:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,785:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,785:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,787:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,788:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,791:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,791:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,792:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,794:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,796:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,800:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,801:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,803:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:34,815:INFO:Calculating mean and std
2024-02-26 19:21:34,816:INFO:Creating metrics dataframe
2024-02-26 19:21:34,820:INFO:Uploading results into container
2024-02-26 19:21:34,821:INFO:Uploading model into container now
2024-02-26 19:21:34,821:INFO:_master_model_container: 3
2024-02-26 19:21:34,822:INFO:_display_container: 2
2024-02-26 19:21:34,822:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-26 19:21:34,822:INFO:create_model() successfully completed......................................
2024-02-26 19:21:34,933:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:34,933:INFO:Creating metrics dataframe
2024-02-26 19:21:34,942:INFO:Initializing Decision Tree Classifier
2024-02-26 19:21:34,942:INFO:Total runtime is 0.18525369167327882 minutes
2024-02-26 19:21:34,945:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:34,945:INFO:Initializing create_model()
2024-02-26 19:21:34,946:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:34,946:INFO:Checking exceptions
2024-02-26 19:21:34,946:INFO:Importing libraries
2024-02-26 19:21:34,946:INFO:Copying training dataset
2024-02-26 19:21:34,951:INFO:Defining folds
2024-02-26 19:21:34,951:INFO:Declaring metric variables
2024-02-26 19:21:34,954:INFO:Importing untrained model
2024-02-26 19:21:34,958:INFO:Decision Tree Classifier Imported successfully
2024-02-26 19:21:34,965:INFO:Starting cross validation
2024-02-26 19:21:34,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:35,246:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,248:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,248:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,251:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,258:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,258:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,260:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,263:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,263:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,268:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,268:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,271:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,274:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,274:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,276:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,283:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,285:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,286:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,296:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,296:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,297:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,303:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,304:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,304:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,305:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,309:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,313:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,314:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,320:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,320:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,330:INFO:Calculating mean and std
2024-02-26 19:21:35,332:INFO:Creating metrics dataframe
2024-02-26 19:21:35,336:INFO:Uploading results into container
2024-02-26 19:21:35,336:INFO:Uploading model into container now
2024-02-26 19:21:35,337:INFO:_master_model_container: 4
2024-02-26 19:21:35,337:INFO:_display_container: 2
2024-02-26 19:21:35,338:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2024-02-26 19:21:35,338:INFO:create_model() successfully completed......................................
2024-02-26 19:21:35,456:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:35,456:INFO:Creating metrics dataframe
2024-02-26 19:21:35,465:INFO:Initializing SVM - Linear Kernel
2024-02-26 19:21:35,465:INFO:Total runtime is 0.1939724087715149 minutes
2024-02-26 19:21:35,470:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:35,470:INFO:Initializing create_model()
2024-02-26 19:21:35,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:35,470:INFO:Checking exceptions
2024-02-26 19:21:35,470:INFO:Importing libraries
2024-02-26 19:21:35,471:INFO:Copying training dataset
2024-02-26 19:21:35,475:INFO:Defining folds
2024-02-26 19:21:35,475:INFO:Declaring metric variables
2024-02-26 19:21:35,478:INFO:Importing untrained model
2024-02-26 19:21:35,482:INFO:SVM - Linear Kernel Imported successfully
2024-02-26 19:21:35,488:INFO:Starting cross validation
2024-02-26 19:21:35,491:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:35,773:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-26 19:21:35,774:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-26 19:21:35,776:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,777:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-26 19:21:35,779:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,780:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-26 19:21:35,782:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,784:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,786:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-26 19:21:35,787:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-26 19:21:35,787:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,788:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-26 19:21:35,789:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,791:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,791:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-26 19:21:35,792:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,792:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-26 19:21:35,793:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,794:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,797:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,797:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,797:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,799:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,800:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-26 19:21:35,801:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,802:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,803:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,803:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,804:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,807:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,807:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,809:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,810:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,812:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,813:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,816:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,816:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,823:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:35,833:INFO:Calculating mean and std
2024-02-26 19:21:35,834:INFO:Creating metrics dataframe
2024-02-26 19:21:35,839:INFO:Uploading results into container
2024-02-26 19:21:35,840:INFO:Uploading model into container now
2024-02-26 19:21:35,841:INFO:_master_model_container: 5
2024-02-26 19:21:35,841:INFO:_display_container: 2
2024-02-26 19:21:35,841:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-26 19:21:35,842:INFO:create_model() successfully completed......................................
2024-02-26 19:21:35,960:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:35,960:INFO:Creating metrics dataframe
2024-02-26 19:21:35,970:INFO:Initializing Ridge Classifier
2024-02-26 19:21:35,970:INFO:Total runtime is 0.2023927410443624 minutes
2024-02-26 19:21:35,973:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:35,974:INFO:Initializing create_model()
2024-02-26 19:21:35,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:35,974:INFO:Checking exceptions
2024-02-26 19:21:35,974:INFO:Importing libraries
2024-02-26 19:21:35,974:INFO:Copying training dataset
2024-02-26 19:21:35,978:INFO:Defining folds
2024-02-26 19:21:35,978:INFO:Declaring metric variables
2024-02-26 19:21:35,983:INFO:Importing untrained model
2024-02-26 19:21:35,987:INFO:Ridge Classifier Imported successfully
2024-02-26 19:21:35,996:INFO:Starting cross validation
2024-02-26 19:21:35,998:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:36,262:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-26 19:21:36,267:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,274:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-26 19:21:36,275:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,276:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-26 19:21:36,277:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,277:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-26 19:21:36,282:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,282:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,282:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-26 19:21:36,283:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-26 19:21:36,284:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,284:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-26 19:21:36,286:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,287:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,288:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,288:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,290:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,290:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,294:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-26 19:21:36,295:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,297:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,297:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,297:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,298:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,298:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-26 19:21:36,300:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-26 19:21:36,300:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,301:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,303:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,303:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,303:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,306:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,307:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,309:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,309:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,318:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,318:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,318:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:36,329:INFO:Calculating mean and std
2024-02-26 19:21:36,331:INFO:Creating metrics dataframe
2024-02-26 19:21:36,335:INFO:Uploading results into container
2024-02-26 19:21:36,335:INFO:Uploading model into container now
2024-02-26 19:21:36,336:INFO:_master_model_container: 6
2024-02-26 19:21:36,336:INFO:_display_container: 2
2024-02-26 19:21:36,336:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-02-26 19:21:36,337:INFO:create_model() successfully completed......................................
2024-02-26 19:21:36,455:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:36,455:INFO:Creating metrics dataframe
2024-02-26 19:21:36,465:INFO:Initializing Random Forest Classifier
2024-02-26 19:21:36,465:INFO:Total runtime is 0.2106427788734436 minutes
2024-02-26 19:21:36,468:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:36,469:INFO:Initializing create_model()
2024-02-26 19:21:36,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:36,469:INFO:Checking exceptions
2024-02-26 19:21:36,469:INFO:Importing libraries
2024-02-26 19:21:36,469:INFO:Copying training dataset
2024-02-26 19:21:36,474:INFO:Defining folds
2024-02-26 19:21:36,474:INFO:Declaring metric variables
2024-02-26 19:21:36,478:INFO:Importing untrained model
2024-02-26 19:21:36,482:INFO:Random Forest Classifier Imported successfully
2024-02-26 19:21:36,489:INFO:Starting cross validation
2024-02-26 19:21:36,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:37,269:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,270:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,278:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,279:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,279:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,282:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,283:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,289:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,290:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,290:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,290:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,292:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,293:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,294:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,300:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,301:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,301:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,302:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,302:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,302:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,305:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,310:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,311:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,312:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,313:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,319:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,320:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,333:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,339:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,345:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,354:INFO:Calculating mean and std
2024-02-26 19:21:37,356:INFO:Creating metrics dataframe
2024-02-26 19:21:37,359:INFO:Uploading results into container
2024-02-26 19:21:37,359:INFO:Uploading model into container now
2024-02-26 19:21:37,360:INFO:_master_model_container: 7
2024-02-26 19:21:37,360:INFO:_display_container: 2
2024-02-26 19:21:37,361:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-02-26 19:21:37,361:INFO:create_model() successfully completed......................................
2024-02-26 19:21:37,474:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:37,474:INFO:Creating metrics dataframe
2024-02-26 19:21:37,484:INFO:Initializing Quadratic Discriminant Analysis
2024-02-26 19:21:37,485:INFO:Total runtime is 0.2276334245999654 minutes
2024-02-26 19:21:37,488:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:37,488:INFO:Initializing create_model()
2024-02-26 19:21:37,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:37,489:INFO:Checking exceptions
2024-02-26 19:21:37,489:INFO:Importing libraries
2024-02-26 19:21:37,489:INFO:Copying training dataset
2024-02-26 19:21:37,493:INFO:Defining folds
2024-02-26 19:21:37,493:INFO:Declaring metric variables
2024-02-26 19:21:37,496:INFO:Importing untrained model
2024-02-26 19:21:37,500:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-26 19:21:37,507:INFO:Starting cross validation
2024-02-26 19:21:37,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:37,721:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 19:21:37,721:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 19:21:37,734:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 19:21:37,736:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 19:21:37,737:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 19:21:37,751:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 19:21:37,754:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 19:21:37,755:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 19:21:37,798:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,802:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,804:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,804:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,808:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,809:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,812:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,812:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,813:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,815:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,817:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,819:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,819:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,821:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,823:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,823:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,823:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,825:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,825:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,826:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,827:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,827:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,829:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,830:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,834:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,837:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,837:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,838:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,843:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,845:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:37,853:INFO:Calculating mean and std
2024-02-26 19:21:37,855:INFO:Creating metrics dataframe
2024-02-26 19:21:37,860:INFO:Uploading results into container
2024-02-26 19:21:37,860:INFO:Uploading model into container now
2024-02-26 19:21:37,861:INFO:_master_model_container: 8
2024-02-26 19:21:37,861:INFO:_display_container: 2
2024-02-26 19:21:37,861:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-26 19:21:37,861:INFO:create_model() successfully completed......................................
2024-02-26 19:21:37,979:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:37,979:INFO:Creating metrics dataframe
2024-02-26 19:21:37,990:INFO:Initializing Ada Boost Classifier
2024-02-26 19:21:37,990:INFO:Total runtime is 0.23605953852335612 minutes
2024-02-26 19:21:37,993:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:37,993:INFO:Initializing create_model()
2024-02-26 19:21:37,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:37,994:INFO:Checking exceptions
2024-02-26 19:21:37,994:INFO:Importing libraries
2024-02-26 19:21:37,994:INFO:Copying training dataset
2024-02-26 19:21:37,999:INFO:Defining folds
2024-02-26 19:21:37,999:INFO:Declaring metric variables
2024-02-26 19:21:38,003:INFO:Importing untrained model
2024-02-26 19:21:38,005:INFO:Ada Boost Classifier Imported successfully
2024-02-26 19:21:38,013:INFO:Starting cross validation
2024-02-26 19:21:38,014:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:38,627:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,629:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,633:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,636:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,638:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,640:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,647:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,647:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,648:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,648:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,650:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,651:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,656:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,656:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,657:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,657:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,659:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,661:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,663:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,665:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,665:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,665:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,666:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,667:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,670:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,670:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,671:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,674:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,684:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:38,693:INFO:Calculating mean and std
2024-02-26 19:21:38,694:INFO:Creating metrics dataframe
2024-02-26 19:21:38,698:INFO:Uploading results into container
2024-02-26 19:21:38,698:INFO:Uploading model into container now
2024-02-26 19:21:38,698:INFO:_master_model_container: 9
2024-02-26 19:21:38,698:INFO:_display_container: 2
2024-02-26 19:21:38,700:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2024-02-26 19:21:38,700:INFO:create_model() successfully completed......................................
2024-02-26 19:21:38,813:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:38,813:INFO:Creating metrics dataframe
2024-02-26 19:21:38,823:INFO:Initializing Gradient Boosting Classifier
2024-02-26 19:21:38,824:INFO:Total runtime is 0.24995189905166626 minutes
2024-02-26 19:21:38,827:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:38,827:INFO:Initializing create_model()
2024-02-26 19:21:38,827:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:38,827:INFO:Checking exceptions
2024-02-26 19:21:38,827:INFO:Importing libraries
2024-02-26 19:21:38,827:INFO:Copying training dataset
2024-02-26 19:21:38,831:INFO:Defining folds
2024-02-26 19:21:38,831:INFO:Declaring metric variables
2024-02-26 19:21:38,834:INFO:Importing untrained model
2024-02-26 19:21:38,837:INFO:Gradient Boosting Classifier Imported successfully
2024-02-26 19:21:38,844:INFO:Starting cross validation
2024-02-26 19:21:38,845:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:39,731:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,737:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,740:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,748:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,749:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,749:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,751:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,752:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,755:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,757:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,758:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,759:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,760:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,760:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,764:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,765:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,766:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,767:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,768:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,770:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,771:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,772:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,774:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,775:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,777:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,780:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,782:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,786:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,790:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:39,799:INFO:Calculating mean and std
2024-02-26 19:21:39,801:INFO:Creating metrics dataframe
2024-02-26 19:21:39,805:INFO:Uploading results into container
2024-02-26 19:21:39,806:INFO:Uploading model into container now
2024-02-26 19:21:39,806:INFO:_master_model_container: 10
2024-02-26 19:21:39,807:INFO:_display_container: 2
2024-02-26 19:21:39,807:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-26 19:21:39,807:INFO:create_model() successfully completed......................................
2024-02-26 19:21:39,927:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:39,927:INFO:Creating metrics dataframe
2024-02-26 19:21:39,938:INFO:Initializing Linear Discriminant Analysis
2024-02-26 19:21:39,938:INFO:Total runtime is 0.26852683623631796 minutes
2024-02-26 19:21:39,942:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:39,942:INFO:Initializing create_model()
2024-02-26 19:21:39,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:39,942:INFO:Checking exceptions
2024-02-26 19:21:39,944:INFO:Importing libraries
2024-02-26 19:21:39,944:INFO:Copying training dataset
2024-02-26 19:21:39,948:INFO:Defining folds
2024-02-26 19:21:39,948:INFO:Declaring metric variables
2024-02-26 19:21:39,951:INFO:Importing untrained model
2024-02-26 19:21:39,955:INFO:Linear Discriminant Analysis Imported successfully
2024-02-26 19:21:39,963:INFO:Starting cross validation
2024-02-26 19:21:39,964:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:40,260:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,269:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,275:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,280:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,280:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,283:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,285:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,290:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,294:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,297:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,298:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,300:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,304:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,308:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,319:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,327:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,328:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,330:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,338:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,338:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,340:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,345:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,345:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,345:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,346:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,347:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,352:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,355:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,360:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,362:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:40,372:INFO:Calculating mean and std
2024-02-26 19:21:40,373:INFO:Creating metrics dataframe
2024-02-26 19:21:40,378:INFO:Uploading results into container
2024-02-26 19:21:40,379:INFO:Uploading model into container now
2024-02-26 19:21:40,379:INFO:_master_model_container: 11
2024-02-26 19:21:40,379:INFO:_display_container: 2
2024-02-26 19:21:40,379:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-26 19:21:40,379:INFO:create_model() successfully completed......................................
2024-02-26 19:21:40,494:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:40,494:INFO:Creating metrics dataframe
2024-02-26 19:21:40,507:INFO:Initializing Extra Trees Classifier
2024-02-26 19:21:40,507:INFO:Total runtime is 0.278008504708608 minutes
2024-02-26 19:21:40,511:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:40,511:INFO:Initializing create_model()
2024-02-26 19:21:40,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:40,511:INFO:Checking exceptions
2024-02-26 19:21:40,511:INFO:Importing libraries
2024-02-26 19:21:40,511:INFO:Copying training dataset
2024-02-26 19:21:40,517:INFO:Defining folds
2024-02-26 19:21:40,518:INFO:Declaring metric variables
2024-02-26 19:21:40,522:INFO:Importing untrained model
2024-02-26 19:21:40,525:INFO:Extra Trees Classifier Imported successfully
2024-02-26 19:21:40,532:INFO:Starting cross validation
2024-02-26 19:21:40,535:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:41,225:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,226:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,228:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,236:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,237:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,237:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,239:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,240:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,248:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,248:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,251:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,253:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,258:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,264:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,271:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,276:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,276:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,282:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,286:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,292:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,294:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,329:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,335:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,341:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,391:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,393:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,396:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,399:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,403:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,407:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:41,414:INFO:Calculating mean and std
2024-02-26 19:21:41,416:INFO:Creating metrics dataframe
2024-02-26 19:21:41,420:INFO:Uploading results into container
2024-02-26 19:21:41,421:INFO:Uploading model into container now
2024-02-26 19:21:41,422:INFO:_master_model_container: 12
2024-02-26 19:21:41,422:INFO:_display_container: 2
2024-02-26 19:21:41,422:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2024-02-26 19:21:41,422:INFO:create_model() successfully completed......................................
2024-02-26 19:21:41,535:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:41,535:INFO:Creating metrics dataframe
2024-02-26 19:21:41,547:INFO:Initializing Light Gradient Boosting Machine
2024-02-26 19:21:41,547:INFO:Total runtime is 0.29532726605733234 minutes
2024-02-26 19:21:41,550:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:41,551:INFO:Initializing create_model()
2024-02-26 19:21:41,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:41,551:INFO:Checking exceptions
2024-02-26 19:21:41,551:INFO:Importing libraries
2024-02-26 19:21:41,551:INFO:Copying training dataset
2024-02-26 19:21:41,556:INFO:Defining folds
2024-02-26 19:21:41,556:INFO:Declaring metric variables
2024-02-26 19:21:41,560:INFO:Importing untrained model
2024-02-26 19:21:41,564:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-26 19:21:41,572:INFO:Starting cross validation
2024-02-26 19:21:41,573:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:42,977:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:42,988:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,000:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,017:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,027:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,028:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,039:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,040:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,049:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,050:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,059:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,069:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,071:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,081:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,084:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,090:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,093:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,104:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,145:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,156:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,167:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,168:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,178:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,188:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,196:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,206:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,215:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,308:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,317:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,325:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,340:INFO:Calculating mean and std
2024-02-26 19:21:43,341:INFO:Creating metrics dataframe
2024-02-26 19:21:43,347:INFO:Uploading results into container
2024-02-26 19:21:43,348:INFO:Uploading model into container now
2024-02-26 19:21:43,348:INFO:_master_model_container: 13
2024-02-26 19:21:43,348:INFO:_display_container: 2
2024-02-26 19:21:43,349:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-26 19:21:43,349:INFO:create_model() successfully completed......................................
2024-02-26 19:21:43,479:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:43,479:INFO:Creating metrics dataframe
2024-02-26 19:21:43,492:INFO:Initializing Dummy Classifier
2024-02-26 19:21:43,492:INFO:Total runtime is 0.32775816520055134 minutes
2024-02-26 19:21:43,495:INFO:SubProcess create_model() called ==================================
2024-02-26 19:21:43,496:INFO:Initializing create_model()
2024-02-26 19:21:43,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BB535DB40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:43,496:INFO:Checking exceptions
2024-02-26 19:21:43,496:INFO:Importing libraries
2024-02-26 19:21:43,496:INFO:Copying training dataset
2024-02-26 19:21:43,501:INFO:Defining folds
2024-02-26 19:21:43,502:INFO:Declaring metric variables
2024-02-26 19:21:43,505:INFO:Importing untrained model
2024-02-26 19:21:43,509:INFO:Dummy Classifier Imported successfully
2024-02-26 19:21:43,515:INFO:Starting cross validation
2024-02-26 19:21:43,517:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:43,778:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,779:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,779:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,780:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,788:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,788:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,789:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,789:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,790:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,793:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-26 19:21:43,793:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-26 19:21:43,794:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-26 19:21:43,794:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,795:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-26 19:21:43,797:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,798:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,799:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,799:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,799:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,799:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,799:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,799:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,799:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,802:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,803:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-26 19:21:43,806:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,806:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,808:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,808:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,808:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-26 19:21:43,808:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,812:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-26 19:21:43,813:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-26 19:21:43,813:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,814:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-26 19:21:43,814:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-26 19:21:43,816:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,816:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,817:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,818:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:43,829:INFO:Calculating mean and std
2024-02-26 19:21:43,830:INFO:Creating metrics dataframe
2024-02-26 19:21:43,835:INFO:Uploading results into container
2024-02-26 19:21:43,836:INFO:Uploading model into container now
2024-02-26 19:21:43,836:INFO:_master_model_container: 14
2024-02-26 19:21:43,836:INFO:_display_container: 2
2024-02-26 19:21:43,837:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-02-26 19:21:43,837:INFO:create_model() successfully completed......................................
2024-02-26 19:21:43,956:INFO:SubProcess create_model() end ==================================
2024-02-26 19:21:43,956:INFO:Creating metrics dataframe
2024-02-26 19:21:43,978:INFO:Initializing create_model()
2024-02-26 19:21:43,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:43,979:INFO:Checking exceptions
2024-02-26 19:21:43,981:INFO:Importing libraries
2024-02-26 19:21:43,981:INFO:Copying training dataset
2024-02-26 19:21:43,987:INFO:Defining folds
2024-02-26 19:21:43,987:INFO:Declaring metric variables
2024-02-26 19:21:43,987:INFO:Importing untrained model
2024-02-26 19:21:43,987:INFO:Declaring custom model
2024-02-26 19:21:43,988:INFO:Decision Tree Classifier Imported successfully
2024-02-26 19:21:43,989:INFO:Cross validation set to False
2024-02-26 19:21:43,989:INFO:Fitting Model
2024-02-26 19:21:44,098:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2024-02-26 19:21:44,098:INFO:create_model() successfully completed......................................
2024-02-26 19:21:44,246:INFO:_master_model_container: 14
2024-02-26 19:21:44,246:INFO:_display_container: 2
2024-02-26 19:21:44,247:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2024-02-26 19:21:44,247:INFO:compare_models() successfully completed......................................
2024-02-26 19:21:56,657:INFO:Initializing create_model()
2024-02-26 19:21:56,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:21:56,657:INFO:Checking exceptions
2024-02-26 19:21:56,673:INFO:Importing libraries
2024-02-26 19:21:56,673:INFO:Copying training dataset
2024-02-26 19:21:56,679:INFO:Defining folds
2024-02-26 19:21:56,679:INFO:Declaring metric variables
2024-02-26 19:21:56,684:INFO:Importing untrained model
2024-02-26 19:21:56,688:INFO:Random Forest Classifier Imported successfully
2024-02-26 19:21:56,697:INFO:Starting cross validation
2024-02-26 19:21:56,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:21:57,517:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,530:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,537:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,550:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,550:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,566:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,573:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,577:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,583:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,589:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,592:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,594:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,601:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,603:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,614:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,684:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,690:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,691:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,696:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,697:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,698:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,702:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,704:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,709:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,784:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,789:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,789:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,795:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,795:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,800:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:21:57,809:INFO:Calculating mean and std
2024-02-26 19:21:57,810:INFO:Creating metrics dataframe
2024-02-26 19:21:57,817:INFO:Finalizing model
2024-02-26 19:21:58,165:INFO:Uploading results into container
2024-02-26 19:21:58,166:INFO:Uploading model into container now
2024-02-26 19:21:58,176:INFO:_master_model_container: 15
2024-02-26 19:21:58,176:INFO:_display_container: 3
2024-02-26 19:21:58,176:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-02-26 19:21:58,178:INFO:create_model() successfully completed......................................
2024-02-26 19:22:08,838:INFO:Initializing tune_model()
2024-02-26 19:22:08,839:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>)
2024-02-26 19:22:08,839:INFO:Checking exceptions
2024-02-26 19:22:08,857:INFO:Copying training dataset
2024-02-26 19:22:08,863:INFO:Checking base model
2024-02-26 19:22:08,863:INFO:Base model : Random Forest Classifier
2024-02-26 19:22:08,869:INFO:Declaring metric variables
2024-02-26 19:22:08,873:INFO:Defining Hyperparameters
2024-02-26 19:22:09,019:INFO:Tuning with n_jobs=-1
2024-02-26 19:22:09,019:INFO:Initializing RandomizedSearchCV
2024-02-26 19:22:19,421:INFO:best_params: {'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2024-02-26 19:22:19,422:INFO:Hyperparameter search completed
2024-02-26 19:22:19,423:INFO:SubProcess create_model() called ==================================
2024-02-26 19:22:19,423:INFO:Initializing create_model()
2024-02-26 19:22:19,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026BAE347C40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2024-02-26 19:22:19,424:INFO:Checking exceptions
2024-02-26 19:22:19,424:INFO:Importing libraries
2024-02-26 19:22:19,424:INFO:Copying training dataset
2024-02-26 19:22:19,429:INFO:Defining folds
2024-02-26 19:22:19,429:INFO:Declaring metric variables
2024-02-26 19:22:19,432:INFO:Importing untrained model
2024-02-26 19:22:19,432:INFO:Declaring custom model
2024-02-26 19:22:19,436:INFO:Random Forest Classifier Imported successfully
2024-02-26 19:22:19,442:INFO:Starting cross validation
2024-02-26 19:22:19,443:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:22:20,969:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:20,977:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:20,986:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:20,988:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:20,997:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,000:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,019:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,031:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,043:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,127:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,131:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,139:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,144:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,145:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,151:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,155:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,156:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,165:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,228:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,234:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,241:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,270:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,276:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,281:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,306:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,311:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,312:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,316:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,317:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,322:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:21,330:INFO:Calculating mean and std
2024-02-26 19:22:21,331:INFO:Creating metrics dataframe
2024-02-26 19:22:21,336:INFO:Finalizing model
2024-02-26 19:22:21,792:INFO:Uploading results into container
2024-02-26 19:22:21,793:INFO:Uploading model into container now
2024-02-26 19:22:21,793:INFO:_master_model_container: 16
2024-02-26 19:22:21,793:INFO:_display_container: 4
2024-02-26 19:22:21,794:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0,
                       min_samples_leaf=4, min_samples_split=7,
                       min_weight_fraction_leaf=0.0, n_estimators=200,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-02-26 19:22:21,794:INFO:create_model() successfully completed......................................
2024-02-26 19:22:21,907:INFO:SubProcess create_model() end ==================================
2024-02-26 19:22:21,908:INFO:choose_better activated
2024-02-26 19:22:21,911:INFO:SubProcess create_model() called ==================================
2024-02-26 19:22:21,911:INFO:Initializing create_model()
2024-02-26 19:22:21,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 19:22:21,912:INFO:Checking exceptions
2024-02-26 19:22:21,913:INFO:Importing libraries
2024-02-26 19:22:21,913:INFO:Copying training dataset
2024-02-26 19:22:21,917:INFO:Defining folds
2024-02-26 19:22:21,917:INFO:Declaring metric variables
2024-02-26 19:22:21,917:INFO:Importing untrained model
2024-02-26 19:22:21,917:INFO:Declaring custom model
2024-02-26 19:22:21,918:INFO:Random Forest Classifier Imported successfully
2024-02-26 19:22:21,918:INFO:Starting cross validation
2024-02-26 19:22:21,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 19:22:22,698:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,704:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,706:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,706:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,710:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,712:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,713:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,715:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,717:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,718:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,719:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,721:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,723:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,723:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,724:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,726:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,727:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,728:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,728:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,731:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,734:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,739:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,748:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,765:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,771:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,776:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,819:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,824:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,829:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 19:22:22,837:INFO:Calculating mean and std
2024-02-26 19:22:22,838:INFO:Creating metrics dataframe
2024-02-26 19:22:22,840:INFO:Finalizing model
2024-02-26 19:22:23,139:INFO:Uploading results into container
2024-02-26 19:22:23,140:INFO:Uploading model into container now
2024-02-26 19:22:23,140:INFO:_master_model_container: 17
2024-02-26 19:22:23,140:INFO:_display_container: 5
2024-02-26 19:22:23,141:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-02-26 19:22:23,141:INFO:create_model() successfully completed......................................
2024-02-26 19:22:23,249:INFO:SubProcess create_model() end ==================================
2024-02-26 19:22:23,249:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.9949
2024-02-26 19:22:23,250:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0,
                       min_samples_leaf=4, min_samples_split=7,
                       min_weight_fraction_leaf=0.0, n_estimators=200,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.9942
2024-02-26 19:22:23,250:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2024-02-26 19:22:23,250:INFO:choose_better completed
2024-02-26 19:22:23,250:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-02-26 19:22:23,260:INFO:_master_model_container: 17
2024-02-26 19:22:23,260:INFO:_display_container: 4
2024-02-26 19:22:23,261:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-02-26 19:22:23,261:INFO:tune_model() successfully completed......................................
2024-02-26 19:22:24,834:INFO:Initializing evaluate_model()
2024-02-26 19:22:24,834:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-26 19:22:24,850:INFO:Initializing plot_model()
2024-02-26 19:22:24,850:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, system=True)
2024-02-26 19:22:24,850:INFO:Checking exceptions
2024-02-26 19:22:24,872:INFO:Preloading libraries
2024-02-26 19:22:24,882:INFO:Copying training dataset
2024-02-26 19:22:24,883:INFO:Plot type: pipeline
2024-02-26 19:22:25,214:INFO:Visual Rendered Successfully
2024-02-26 19:22:25,334:INFO:plot_model() successfully completed......................................
2024-02-26 19:23:04,620:INFO:Initializing plot_model()
2024-02-26 19:23:04,621:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, system=True)
2024-02-26 19:23:04,621:INFO:Checking exceptions
2024-02-26 19:23:04,706:INFO:Preloading libraries
2024-02-26 19:23:04,718:INFO:Copying training dataset
2024-02-26 19:23:04,718:INFO:Plot type: rfe
2024-02-26 19:23:05,235:INFO:Fitting Model
2024-02-26 19:24:22,900:INFO:Initializing predict_model()
2024-02-26 19:24:22,900:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026BB6214AF0>)
2024-02-26 19:24:22,900:INFO:Checking exceptions
2024-02-26 19:24:22,900:INFO:Preloading libraries
2024-02-26 19:24:22,902:INFO:Set up data.
2024-02-26 19:24:22,905:INFO:Set up index.
2024-02-26 19:24:29,018:INFO:Initializing evaluate_model()
2024-02-26 19:24:29,018:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-26 19:24:29,033:INFO:Initializing plot_model()
2024-02-26 19:24:29,033:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, system=True)
2024-02-26 19:24:29,033:INFO:Checking exceptions
2024-02-26 19:24:29,067:INFO:Preloading libraries
2024-02-26 19:24:29,081:INFO:Copying training dataset
2024-02-26 19:24:29,081:INFO:Plot type: pipeline
2024-02-26 19:24:29,354:INFO:Visual Rendered Successfully
2024-02-26 19:24:29,519:INFO:plot_model() successfully completed......................................
2024-02-26 19:25:06,613:INFO:Initializing plot_model()
2024-02-26 19:25:06,614:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, system=True)
2024-02-26 19:25:06,614:INFO:Checking exceptions
2024-02-26 19:25:06,685:INFO:Preloading libraries
2024-02-26 19:25:06,700:INFO:Copying training dataset
2024-02-26 19:25:06,700:INFO:Plot type: feature_all
2024-02-26 19:25:06,737:WARNING:No coef_ found. Trying feature_importances_
2024-02-26 19:25:07,315:INFO:Visual Rendered Successfully
2024-02-26 19:25:07,484:INFO:plot_model() successfully completed......................................
2024-02-26 19:25:10,382:INFO:Initializing plot_model()
2024-02-26 19:25:10,383:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, system=True)
2024-02-26 19:25:10,383:INFO:Checking exceptions
2024-02-26 19:25:10,406:INFO:Preloading libraries
2024-02-26 19:25:10,420:INFO:Copying training dataset
2024-02-26 19:25:10,420:INFO:Plot type: feature
2024-02-26 19:25:10,420:WARNING:No coef_ found. Trying feature_importances_
2024-02-26 19:25:10,695:INFO:Visual Rendered Successfully
2024-02-26 19:25:10,870:INFO:plot_model() successfully completed......................................
2024-02-26 19:25:35,158:INFO:Initializing predict_model()
2024-02-26 19:25:35,158:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026BAF305480>)
2024-02-26 19:25:35,158:INFO:Checking exceptions
2024-02-26 19:25:35,159:INFO:Preloading libraries
2024-02-26 19:25:35,160:INFO:Set up data.
2024-02-26 19:25:35,163:INFO:Set up index.
2024-02-26 19:26:58,492:INFO:Initializing predict_model()
2024-02-26 19:26:58,492:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026BB38ADB40>)
2024-02-26 19:26:58,492:INFO:Checking exceptions
2024-02-26 19:26:58,492:INFO:Preloading libraries
2024-02-26 19:26:58,494:INFO:Set up data.
2024-02-26 19:26:58,499:INFO:Set up index.
2024-02-26 19:28:37,661:INFO:Initializing predict_model()
2024-02-26 19:28:37,662:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026BAF0BB910>)
2024-02-26 19:28:37,662:INFO:Checking exceptions
2024-02-26 19:28:37,662:INFO:Preloading libraries
2024-02-26 19:28:37,664:INFO:Set up data.
2024-02-26 19:28:37,669:INFO:Set up index.
2024-02-26 19:29:01,176:INFO:Initializing predict_model()
2024-02-26 19:29:01,177:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026BB38AE050>)
2024-02-26 19:29:01,177:INFO:Checking exceptions
2024-02-26 19:29:01,177:INFO:Preloading libraries
2024-02-26 19:29:01,178:INFO:Set up data.
2024-02-26 19:29:01,182:INFO:Set up index.
2024-02-26 19:29:11,801:INFO:Initializing predict_model()
2024-02-26 19:29:11,801:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026BB60EF520>)
2024-02-26 19:29:11,802:INFO:Checking exceptions
2024-02-26 19:29:11,802:INFO:Preloading libraries
2024-02-26 19:29:11,804:INFO:Set up data.
2024-02-26 19:29:11,809:INFO:Set up index.
2024-02-26 19:29:32,923:INFO:Initializing predict_model()
2024-02-26 19:29:32,923:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026BAF063400>)
2024-02-26 19:29:32,924:INFO:Checking exceptions
2024-02-26 19:29:32,924:INFO:Preloading libraries
2024-02-26 19:29:32,925:INFO:Set up data.
2024-02-26 19:29:32,928:INFO:Set up index.
2024-02-26 19:30:18,083:INFO:Initializing predict_model()
2024-02-26 19:30:18,083:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026BB50136A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026BB66489D0>)
2024-02-26 19:30:18,083:INFO:Checking exceptions
2024-02-26 19:30:18,083:INFO:Preloading libraries
2024-02-26 19:30:18,085:INFO:Set up data.
2024-02-26 19:30:18,090:INFO:Set up index.
2024-02-26 19:30:24,554:INFO:Initializing save_model()
2024-02-26 19:30:24,554:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), model_name=final_model_mushroom, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-26 19:30:24,554:INFO:Adding model into prep_pipe
2024-02-26 19:30:24,647:INFO:final_model_mushroom.pkl saved in current working directory
2024-02-26 19:30:24,672:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbo...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=123,
                                        verbose=0, warm_start=False))],
         verbose=False)
2024-02-26 19:30:24,673:INFO:save_model() successfully completed......................................
2024-02-26 19:30:41,431:INFO:PyCaret ClassificationExperiment
2024-02-26 19:30:41,431:INFO:Logging name: mushroom_classification
2024-02-26 19:30:41,431:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-26 19:30:41,431:INFO:version 3.2.0
2024-02-26 19:30:41,431:INFO:Initializing setup()
2024-02-26 19:30:41,431:INFO:self.USI: 69eb
2024-02-26 19:30:41,431:INFO:self._variable_keys: {'log_plots_param', 'logging_param', 'y_train', 'seed', '_ml_usecase', 'USI', 'target_param', 'gpu_param', 'X_test', 'idx', 'y', 'html_param', 'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'X', 'fold_generator', '_available_plots', 'data', 'exp_name_log', 'memory', 'exp_id', 'fold_groups_param', 'y_test', 'X_train', 'gpu_n_jobs_param', 'is_multiclass', 'fix_imbalance'}
2024-02-26 19:30:41,431:INFO:Checking environment
2024-02-26 19:30:41,431:INFO:python_version: 3.10.13
2024-02-26 19:30:41,431:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-26 19:30:41,431:INFO:machine: AMD64
2024-02-26 19:30:41,431:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-26 19:30:41,438:INFO:Memory: svmem(total=34204610560, available=13896294400, percent=59.4, used=20308316160, free=13896294400)
2024-02-26 19:30:41,438:INFO:Physical Core: 8
2024-02-26 19:30:41,438:INFO:Logical Core: 16
2024-02-26 19:30:41,438:INFO:Checking libraries
2024-02-26 19:30:41,438:INFO:System:
2024-02-26 19:30:41,438:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-26 19:30:41,438:INFO:executable: C:\Users\nasru\anaconda3\envs\mlops\python.exe
2024-02-26 19:30:41,438:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-26 19:30:41,438:INFO:PyCaret required dependencies:
2024-02-26 19:30:41,439:INFO:                 pip: 24.0
2024-02-26 19:30:41,439:INFO:          setuptools: 68.2.2
2024-02-26 19:30:41,439:INFO:             pycaret: 3.3.0
2024-02-26 19:30:41,439:INFO:             IPython: 8.22.1
2024-02-26 19:30:41,439:INFO:          ipywidgets: 8.1.2
2024-02-26 19:30:41,439:INFO:                tqdm: 4.66.1
2024-02-26 19:30:41,439:INFO:               numpy: 1.25.2
2024-02-26 19:30:41,439:INFO:              pandas: 1.5.3
2024-02-26 19:30:41,439:INFO:              jinja2: 3.1.3
2024-02-26 19:30:41,439:INFO:               scipy: 1.11.4
2024-02-26 19:30:41,439:INFO:              joblib: 1.3.2
2024-02-26 19:30:41,439:INFO:             sklearn: 1.4.1.post1
2024-02-26 19:30:41,439:INFO:                pyod: 1.1.3
2024-02-26 19:30:41,439:INFO:            imblearn: 0.12.0
2024-02-26 19:30:41,439:INFO:   category_encoders: 2.6.3
2024-02-26 19:30:41,439:INFO:            lightgbm: 4.1.0
2024-02-26 19:30:41,439:INFO:               numba: 0.59.0
2024-02-26 19:30:41,439:INFO:            requests: 2.31.0
2024-02-26 19:30:41,439:INFO:          matplotlib: 3.8.3
2024-02-26 19:30:41,439:INFO:          scikitplot: 0.3.7
2024-02-26 19:30:41,439:INFO:         yellowbrick: 1.5
2024-02-26 19:30:41,440:INFO:              plotly: 5.9.0
2024-02-26 19:30:41,440:INFO:    plotly-resampler: Not installed
2024-02-26 19:30:41,440:INFO:             kaleido: 0.2.1
2024-02-26 19:30:41,440:INFO:           schemdraw: 0.15
2024-02-26 19:30:41,440:INFO:         statsmodels: 0.14.1
2024-02-26 19:30:41,440:INFO:              sktime: 0.26.0
2024-02-26 19:30:41,440:INFO:               tbats: 1.1.3
2024-02-26 19:30:41,440:INFO:            pmdarima: 2.0.4
2024-02-26 19:30:41,440:INFO:              psutil: 5.9.8
2024-02-26 19:30:41,440:INFO:          markupsafe: 2.1.5
2024-02-26 19:30:41,440:INFO:             pickle5: Not installed
2024-02-26 19:30:41,440:INFO:         cloudpickle: 2.2.1
2024-02-26 19:30:41,440:INFO:         deprecation: 2.1.0
2024-02-26 19:30:41,440:INFO:              xxhash: 3.4.1
2024-02-26 19:30:41,440:INFO:           wurlitzer: 3.0.3
2024-02-26 19:30:41,440:INFO:PyCaret optional dependencies:
2024-02-26 19:30:41,440:INFO:                shap: Not installed
2024-02-26 19:30:41,440:INFO:           interpret: Not installed
2024-02-26 19:30:41,440:INFO:                umap: Not installed
2024-02-26 19:30:41,440:INFO:     ydata_profiling: Not installed
2024-02-26 19:30:41,440:INFO:  explainerdashboard: Not installed
2024-02-26 19:30:41,440:INFO:             autoviz: Not installed
2024-02-26 19:30:41,441:INFO:           fairlearn: Not installed
2024-02-26 19:30:41,441:INFO:          deepchecks: Not installed
2024-02-26 19:30:41,441:INFO:             xgboost: Not installed
2024-02-26 19:30:41,441:INFO:            catboost: Not installed
2024-02-26 19:30:41,441:INFO:              kmodes: Not installed
2024-02-26 19:30:41,441:INFO:             mlxtend: Not installed
2024-02-26 19:30:41,441:INFO:       statsforecast: Not installed
2024-02-26 19:30:41,441:INFO:        tune_sklearn: Not installed
2024-02-26 19:30:41,441:INFO:                 ray: Not installed
2024-02-26 19:30:41,441:INFO:            hyperopt: Not installed
2024-02-26 19:30:41,441:INFO:              optuna: Not installed
2024-02-26 19:30:41,441:INFO:               skopt: Not installed
2024-02-26 19:30:41,441:INFO:              mlflow: 2.9.2
2024-02-26 19:30:41,441:INFO:              gradio: Not installed
2024-02-26 19:30:41,441:INFO:             fastapi: Not installed
2024-02-26 19:30:41,441:INFO:             uvicorn: Not installed
2024-02-26 19:30:41,441:INFO:              m2cgen: Not installed
2024-02-26 19:30:41,441:INFO:           evidently: Not installed
2024-02-26 19:30:41,441:INFO:               fugue: Not installed
2024-02-26 19:30:41,441:INFO:           streamlit: Not installed
2024-02-26 19:30:41,441:INFO:             prophet: Not installed
2024-02-26 19:30:41,441:INFO:None
2024-02-26 19:30:41,442:INFO:Set up data.
2024-02-26 19:30:41,450:INFO:Set up folding strategy.
2024-02-26 19:30:41,450:INFO:Set up train/test split.
2024-02-26 19:30:41,462:INFO:Set up index.
2024-02-26 19:30:41,463:INFO:Assigning column types.
2024-02-26 19:30:41,466:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-26 19:30:41,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 19:30:41,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:30:41,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:41,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:41,599:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 19:30:41,600:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:30:41,629:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:41,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:41,630:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-26 19:30:41,682:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:30:41,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:41,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:41,761:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 19:30:41,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:41,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:41,798:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-26 19:30:41,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:41,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:42,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:42,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:42,013:INFO:Preparing preprocessing pipeline...
2024-02-26 19:30:42,014:INFO:Set up label encoding.
2024-02-26 19:30:42,014:INFO:Set up simple imputation.
2024-02-26 19:30:42,019:INFO:Set up encoding of ordinal features.
2024-02-26 19:30:42,020:INFO:Set up encoding of categorical features.
2024-02-26 19:30:42,020:INFO:Set up column name cleaning.
2024-02-26 19:30:42,167:INFO:Finished creating preprocessing pipeline.
2024-02-26 19:30:42,189:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-26 19:30:42,189:INFO:Creating final display dataframe.
2024-02-26 19:30:42,536:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     4785
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape                (8124, 6)
5        Transformed data shape               (8124, 31)
6   Transformed train set shape               (5686, 31)
7    Transformed test set shape               (2438, 31)
8              Ordinal features                        1
9          Categorical features                        5
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16               Fold Generator          StratifiedKFold
17                  Fold Number                       10
18                     CPU Jobs                       -1
19                      Use GPU                    False
20               Log Experiment             MlflowLogger
21              Experiment Name  mushroom_classification
22                          USI                     69eb
2024-02-26 19:30:42,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:42,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:42,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:42,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-26 19:30:42,712:INFO:Logging experiment in loggers
2024-02-26 19:30:43,011:INFO:SubProcess save_model() called ==================================
2024-02-26 19:30:43,057:INFO:Initializing save_model()
2024-02-26 19:30:43,057:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\nasru\AppData\Local\Temp\tmpzi0gx9f_\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-26 19:30:43,057:INFO:Adding model into prep_pipe
2024-02-26 19:30:43,057:WARNING:Only Model saved as it was a pipeline.
2024-02-26 19:30:43,069:INFO:C:\Users\nasru\AppData\Local\Temp\tmpzi0gx9f_\Transformation Pipeline.pkl saved in current working directory
2024-02-26 19:30:43,092:INFO:Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-26 19:30:43,092:INFO:save_model() successfully completed......................................
2024-02-26 19:30:43,263:INFO:SubProcess save_model() end ==================================
2024-02-26 19:30:43,278:INFO:setup() successfully completed in 1.3s...............
2024-02-26 19:42:18,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:42:18,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:42:18,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:42:18,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:42:23,443:INFO:Initializing load_model()
2024-02-26 19:42:23,444:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 19:42:23,450:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:42:23,450:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:42:42,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:42:42,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:42:42,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:42:42,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:42:44,029:INFO:Initializing load_model()
2024-02-26 19:42:44,029:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 19:42:44,031:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:42:44,032:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:44:03,922:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:44:03,922:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:44:03,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:44:03,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:44:05,520:INFO:Initializing load_model()
2024-02-26 19:44:05,520:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 19:44:05,521:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:44:05,523:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:45:09,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:45:09,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:45:09,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:45:09,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:45:10,803:INFO:Initializing load_model()
2024-02-26 19:45:10,804:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 19:45:10,806:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:45:10,806:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:45:32,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:45:32,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:45:32,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:45:32,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:45:33,654:INFO:Initializing load_model()
2024-02-26 19:45:33,655:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 19:45:33,656:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:45:33,657:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:47:24,602:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:47:24,602:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:47:24,603:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:47:24,603:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:47:26,207:INFO:Initializing load_model()
2024-02-26 19:47:26,207:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 19:47:26,209:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:47:26,209:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:47:32,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:47:32,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:47:32,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:47:32,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:47:35,032:INFO:Initializing load_model()
2024-02-26 19:47:35,032:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 19:47:35,034:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:47:35,035:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:47:35,040:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator DecisionTreeClassifier from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:51:55,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:51:55,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:51:55,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:51:55,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:51:57,445:INFO:Initializing load_model()
2024-02-26 19:51:57,446:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 19:51:57,447:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:51:57,448:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:52:50,123:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:52:50,124:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:52:50,124:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:52:50,124:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:52:55,407:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:52:55,407:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:52:55,407:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:52:55,407:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:53:29,806:INFO:Initializing predict_model()
2024-02-26 19:53:29,807:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E6C0B47910>, estimator=['edible' 'poisonous'], probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E6C0B0E8C0>)
2024-02-26 19:53:29,807:INFO:Checking exceptions
2024-02-26 19:53:29,807:INFO:Preloading libraries
2024-02-26 19:54:00,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:00,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:00,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:00,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:11,985:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:11,985:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:11,986:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:11,986:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:29,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:29,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:29,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:29,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:34,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:34,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:34,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:34,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:54:38,821:INFO:Initializing predict_model()
2024-02-26 19:54:38,821:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213470A7F70>, estimator=['edible' 'poisonous'], probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000213470D2680>)
2024-02-26 19:54:38,821:INFO:Checking exceptions
2024-02-26 19:54:38,822:INFO:Preloading libraries
2024-02-26 19:54:51,739:INFO:Initializing predict_model()
2024-02-26 19:54:51,739:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021347110E20>, estimator=['edible' 'poisonous'], probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000213470D3250>)
2024-02-26 19:54:51,739:INFO:Checking exceptions
2024-02-26 19:54:51,739:INFO:Preloading libraries
2024-02-26 19:55:10,026:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\pandas\__init__.py:24: UserWarning: The NumPy module was reloaded (imported a second time). This can in some cases result in small but subtle issues and is discouraged.
  __import__(_dependency)

2024-02-26 19:55:11,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:11,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:11,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:11,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:16,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:16,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:16,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:16,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:38,835:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:38,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:38,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:38,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:58,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:58,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:58,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:58,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 19:55:59,788:INFO:Initializing load_model()
2024-02-26 19:55:59,788:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 19:55:59,790:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 19:55:59,790:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\sklearn\base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.4.1.post1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-02-26 20:08:16,914:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:16,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:16,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:16,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:18,805:INFO:Initializing load_model()
2024-02-26 20:08:18,806:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 20:08:26,178:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:26,178:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:26,178:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:26,178:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:27,885:INFO:Initializing load_model()
2024-02-26 20:08:27,885:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 20:08:36,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:36,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:36,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:36,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:08:37,966:INFO:Initializing load_model()
2024-02-26 20:08:37,967:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 20:26:04,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:26:04,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:26:04,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:26:04,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:26:06,253:INFO:PyCaret ClassificationExperiment
2024-02-26 20:26:06,253:INFO:Logging name: clf-default-name
2024-02-26 20:26:06,253:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-26 20:26:06,253:INFO:version 3.3.0
2024-02-26 20:26:06,253:INFO:Initializing setup()
2024-02-26 20:26:06,253:INFO:self.USI: 7e22
2024-02-26 20:26:06,253:INFO:self._variable_keys: {'y_test', 'gpu_param', 'gpu_n_jobs_param', 'log_plots_param', 'USI', 'y_train', 'fold_groups_param', 'data', '_ml_usecase', 'pipeline', '_available_plots', 'exp_id', 'exp_name_log', 'fold_generator', 'y', 'n_jobs_param', 'memory', 'seed', 'html_param', 'X_train', 'X_test', 'fold_shuffle_param', 'X', 'is_multiclass', 'target_param', 'logging_param', 'fix_imbalance', 'idx'}
2024-02-26 20:26:06,253:INFO:Checking environment
2024-02-26 20:26:06,253:INFO:python_version: 3.10.13
2024-02-26 20:26:06,253:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-26 20:26:06,253:INFO:machine: AMD64
2024-02-26 20:26:06,253:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-26 20:26:06,259:INFO:Memory: svmem(total=34204610560, available=11872796672, percent=65.3, used=22331813888, free=11872796672)
2024-02-26 20:26:06,259:INFO:Physical Core: 8
2024-02-26 20:26:06,259:INFO:Logical Core: 16
2024-02-26 20:26:06,259:INFO:Checking libraries
2024-02-26 20:26:06,259:INFO:System:
2024-02-26 20:26:06,259:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-26 20:26:06,259:INFO:executable: C:\Users\nasru\anaconda3\envs\mlops\python.exe
2024-02-26 20:26:06,259:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-26 20:26:06,259:INFO:PyCaret required dependencies:
2024-02-26 20:26:06,309:INFO:                 pip: 24.0
2024-02-26 20:26:06,310:INFO:          setuptools: 68.2.2
2024-02-26 20:26:06,310:INFO:             pycaret: 3.3.0
2024-02-26 20:26:06,310:INFO:             IPython: 8.22.1
2024-02-26 20:26:06,310:INFO:          ipywidgets: 8.1.2
2024-02-26 20:26:06,310:INFO:                tqdm: 4.66.1
2024-02-26 20:26:06,310:INFO:               numpy: 1.25.2
2024-02-26 20:26:06,310:INFO:              pandas: 2.1.4
2024-02-26 20:26:06,310:INFO:              jinja2: 3.1.3
2024-02-26 20:26:06,310:INFO:               scipy: 1.11.4
2024-02-26 20:26:06,310:INFO:              joblib: 1.3.2
2024-02-26 20:26:06,310:INFO:             sklearn: 1.4.1.post1
2024-02-26 20:26:06,310:INFO:                pyod: 1.1.3
2024-02-26 20:26:06,310:INFO:            imblearn: 0.12.0
2024-02-26 20:26:06,310:INFO:   category_encoders: 2.6.3
2024-02-26 20:26:06,310:INFO:            lightgbm: 4.1.0
2024-02-26 20:26:06,310:INFO:               numba: 0.59.0
2024-02-26 20:26:06,311:INFO:            requests: 2.31.0
2024-02-26 20:26:06,311:INFO:          matplotlib: 3.7.5
2024-02-26 20:26:06,311:INFO:          scikitplot: 0.3.7
2024-02-26 20:26:06,311:INFO:         yellowbrick: 1.5
2024-02-26 20:26:06,311:INFO:              plotly: 5.9.0
2024-02-26 20:26:06,311:INFO:    plotly-resampler: Not installed
2024-02-26 20:26:06,311:INFO:             kaleido: 0.2.1
2024-02-26 20:26:06,311:INFO:           schemdraw: 0.15
2024-02-26 20:26:06,311:INFO:         statsmodels: 0.14.1
2024-02-26 20:26:06,311:INFO:              sktime: 0.26.0
2024-02-26 20:26:06,311:INFO:               tbats: 1.1.3
2024-02-26 20:26:06,311:INFO:            pmdarima: 2.0.4
2024-02-26 20:26:06,311:INFO:              psutil: 5.9.8
2024-02-26 20:26:06,311:INFO:          markupsafe: 2.1.5
2024-02-26 20:26:06,312:INFO:             pickle5: Not installed
2024-02-26 20:26:06,312:INFO:         cloudpickle: 2.2.1
2024-02-26 20:26:06,312:INFO:         deprecation: 2.1.0
2024-02-26 20:26:06,312:INFO:              xxhash: 3.4.1
2024-02-26 20:26:06,312:INFO:           wurlitzer: 3.0.3
2024-02-26 20:26:06,312:INFO:PyCaret optional dependencies:
2024-02-26 20:26:06,377:INFO:                shap: Not installed
2024-02-26 20:26:06,378:INFO:           interpret: Not installed
2024-02-26 20:26:06,378:INFO:                umap: 0.5.4
2024-02-26 20:26:06,378:INFO:     ydata_profiling: Not installed
2024-02-26 20:26:06,378:INFO:  explainerdashboard: Not installed
2024-02-26 20:26:06,378:INFO:             autoviz: Not installed
2024-02-26 20:26:06,378:INFO:           fairlearn: Not installed
2024-02-26 20:26:06,378:INFO:          deepchecks: Not installed
2024-02-26 20:26:06,378:INFO:             xgboost: 1.7.3
2024-02-26 20:26:06,378:INFO:            catboost: 1.2
2024-02-26 20:26:06,378:INFO:              kmodes: 0.12.2
2024-02-26 20:26:06,378:INFO:             mlxtend: 0.23.1
2024-02-26 20:26:06,378:INFO:       statsforecast: Not installed
2024-02-26 20:26:06,378:INFO:        tune_sklearn: Not installed
2024-02-26 20:26:06,378:INFO:                 ray: Not installed
2024-02-26 20:26:06,378:INFO:            hyperopt: Not installed
2024-02-26 20:26:06,379:INFO:              optuna: Not installed
2024-02-26 20:26:06,379:INFO:               skopt: Not installed
2024-02-26 20:26:06,379:INFO:              mlflow: 2.9.2
2024-02-26 20:26:06,379:INFO:              gradio: Not installed
2024-02-26 20:26:06,379:INFO:             fastapi: Not installed
2024-02-26 20:26:06,379:INFO:             uvicorn: Not installed
2024-02-26 20:26:06,379:INFO:              m2cgen: Not installed
2024-02-26 20:26:06,379:INFO:           evidently: Not installed
2024-02-26 20:26:06,379:INFO:               fugue: Not installed
2024-02-26 20:26:06,379:INFO:           streamlit: Not installed
2024-02-26 20:26:06,379:INFO:             prophet: Not installed
2024-02-26 20:26:06,379:INFO:None
2024-02-26 20:26:06,379:INFO:Set up data.
2024-02-26 20:26:06,389:INFO:Set up folding strategy.
2024-02-26 20:26:06,389:INFO:Set up train/test split.
2024-02-26 20:26:06,407:INFO:Set up index.
2024-02-26 20:26:06,407:INFO:Assigning column types.
2024-02-26 20:26:06,409:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-26 20:26:06,452:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 20:26:06,456:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 20:26:06,491:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:26:06,494:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:26:06,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 20:26:06,689:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 20:26:06,722:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:26:06,725:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:26:06,725:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-26 20:26:06,774:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 20:26:06,806:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:26:06,808:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:26:06,857:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 20:26:06,893:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:26:06,896:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:26:06,897:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-26 20:26:06,974:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:26:06,976:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:26:07,059:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:26:07,062:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:26:07,066:INFO:Preparing preprocessing pipeline...
2024-02-26 20:26:07,067:INFO:Set up label encoding.
2024-02-26 20:26:07,067:INFO:Set up simple imputation.
2024-02-26 20:26:07,070:INFO:Set up encoding of ordinal features.
2024-02-26 20:26:07,072:INFO:Set up encoding of categorical features.
2024-02-26 20:26:07,072:INFO:Set up column name cleaning.
2024-02-26 20:26:07,224:INFO:Finished creating preprocessing pipeline.
2024-02-26 20:26:07,245:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-26 20:26:07,245:INFO:Creating final display dataframe.
2024-02-26 20:26:07,691:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      123
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape                (8124, 6)
5        Transformed data shape               (8124, 31)
6   Transformed train set shape               (5686, 31)
7    Transformed test set shape               (2438, 31)
8          Categorical features                        5
9                    Preprocess                     True
10              Imputation type                   simple
11           Numeric imputation                     mean
12       Categorical imputation                     mode
13     Maximum one-hot encoding                       25
14              Encoding method                     None
15               Fold Generator          StratifiedKFold
16                  Fold Number                       10
17                     CPU Jobs                       -1
18                      Use GPU                    False
19               Log Experiment                    False
20              Experiment Name         clf-default-name
21                          USI                     7e22
2024-02-26 20:26:07,758:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:26:07,760:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:26:07,827:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:26:07,830:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:26:07,831:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-02-26 20:26:07,832:INFO:setup() successfully completed in 1.6s...............
2024-02-26 20:26:11,859:INFO:Initializing compare_models()
2024-02-26 20:26:11,859:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-26 20:26:11,859:INFO:Checking exceptions
2024-02-26 20:26:11,863:INFO:Preparing display monitor
2024-02-26 20:26:11,884:INFO:Initializing Logistic Regression
2024-02-26 20:26:11,884:INFO:Total runtime is 0.0 minutes
2024-02-26 20:26:11,887:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:11,887:INFO:Initializing create_model()
2024-02-26 20:26:11,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:11,889:INFO:Checking exceptions
2024-02-26 20:26:11,889:INFO:Importing libraries
2024-02-26 20:26:11,889:INFO:Copying training dataset
2024-02-26 20:26:11,896:INFO:Defining folds
2024-02-26 20:26:11,896:INFO:Declaring metric variables
2024-02-26 20:26:11,899:INFO:Importing untrained model
2024-02-26 20:26:11,903:INFO:Logistic Regression Imported successfully
2024-02-26 20:26:11,912:INFO:Starting cross validation
2024-02-26 20:26:11,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:17,031:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,036:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,045:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,055:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,098:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,105:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,115:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,122:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,140:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,147:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,158:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,168:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,172:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,178:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,187:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,198:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,210:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,216:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,223:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,229:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,242:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,247:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,251:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,254:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,256:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,258:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,259:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,262:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,262:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,264:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,265:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,267:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,269:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,270:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,273:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,275:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,275:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,279:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,281:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,282:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:17,293:INFO:Calculating mean and std
2024-02-26 20:26:17,294:INFO:Creating metrics dataframe
2024-02-26 20:26:17,298:INFO:Uploading results into container
2024-02-26 20:26:17,299:INFO:Uploading model into container now
2024-02-26 20:26:17,299:INFO:_master_model_container: 1
2024-02-26 20:26:17,300:INFO:_display_container: 2
2024-02-26 20:26:17,300:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-26 20:26:17,301:INFO:create_model() successfully completed......................................
2024-02-26 20:26:17,422:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:17,422:INFO:Creating metrics dataframe
2024-02-26 20:26:17,429:INFO:Initializing K Neighbors Classifier
2024-02-26 20:26:17,429:INFO:Total runtime is 0.09240937232971191 minutes
2024-02-26 20:26:17,433:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:17,433:INFO:Initializing create_model()
2024-02-26 20:26:17,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:17,433:INFO:Checking exceptions
2024-02-26 20:26:17,433:INFO:Importing libraries
2024-02-26 20:26:17,434:INFO:Copying training dataset
2024-02-26 20:26:17,438:INFO:Defining folds
2024-02-26 20:26:17,438:INFO:Declaring metric variables
2024-02-26 20:26:17,441:INFO:Importing untrained model
2024-02-26 20:26:17,445:INFO:K Neighbors Classifier Imported successfully
2024-02-26 20:26:17,453:INFO:Starting cross validation
2024-02-26 20:26:17,455:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:17,717:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,717:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,717:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,729:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:17,751:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:17,755:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:17,758:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:17,768:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:20,762:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:20,766:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:20,779:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:20,792:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:20,802:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:20,803:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:20,807:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:20,809:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:20,810:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:20,839:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:20,839:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:20,844:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:20,846:INFO:Calculating mean and std
2024-02-26 20:26:20,848:INFO:Creating metrics dataframe
2024-02-26 20:26:20,850:INFO:Uploading results into container
2024-02-26 20:26:20,851:INFO:Uploading model into container now
2024-02-26 20:26:20,851:INFO:_master_model_container: 2
2024-02-26 20:26:20,852:INFO:_display_container: 2
2024-02-26 20:26:20,852:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-26 20:26:20,852:INFO:create_model() successfully completed......................................
2024-02-26 20:26:20,968:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2024-02-26 20:26:20,969:WARNING:Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-02-26 20:26:20,969:INFO:Initializing create_model()
2024-02-26 20:26:20,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:20,969:INFO:Checking exceptions
2024-02-26 20:26:20,970:INFO:Importing libraries
2024-02-26 20:26:20,970:INFO:Copying training dataset
2024-02-26 20:26:20,973:INFO:Defining folds
2024-02-26 20:26:20,974:INFO:Declaring metric variables
2024-02-26 20:26:20,976:INFO:Importing untrained model
2024-02-26 20:26:20,980:INFO:K Neighbors Classifier Imported successfully
2024-02-26 20:26:20,987:INFO:Starting cross validation
2024-02-26 20:26:20,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:21,239:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,241:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,245:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,247:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,248:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,248:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,250:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,252:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,253:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,256:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,277:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:21,283:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:21,286:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:21,286:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:21,287:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:21,288:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:21,289:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:21,292:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:21,296:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:21,296:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-02-26 20:26:21,297:INFO:Calculating mean and std
2024-02-26 20:26:21,298:INFO:Creating metrics dataframe
2024-02-26 20:26:21,300:INFO:Uploading results into container
2024-02-26 20:26:21,301:INFO:Uploading model into container now
2024-02-26 20:26:21,301:INFO:_master_model_container: 3
2024-02-26 20:26:21,301:INFO:_display_container: 2
2024-02-26 20:26:21,301:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-26 20:26:21,302:INFO:create_model() successfully completed......................................
2024-02-26 20:26:21,406:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2024-02-26 20:26:21,406:ERROR:Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 818, in compare_models
    np.sum(
AssertionError

2024-02-26 20:26:21,406:INFO:Initializing Naive Bayes
2024-02-26 20:26:21,406:INFO:Total runtime is 0.15869837204615275 minutes
2024-02-26 20:26:21,409:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:21,409:INFO:Initializing create_model()
2024-02-26 20:26:21,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:21,410:INFO:Checking exceptions
2024-02-26 20:26:21,410:INFO:Importing libraries
2024-02-26 20:26:21,410:INFO:Copying training dataset
2024-02-26 20:26:21,414:INFO:Defining folds
2024-02-26 20:26:21,414:INFO:Declaring metric variables
2024-02-26 20:26:21,417:INFO:Importing untrained model
2024-02-26 20:26:21,420:INFO:Naive Bayes Imported successfully
2024-02-26 20:26:21,425:INFO:Starting cross validation
2024-02-26 20:26:21,428:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:21,664:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,672:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,672:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,673:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,675:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,676:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,679:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,679:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,680:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,680:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,681:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,683:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,685:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,686:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,688:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,690:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,690:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,691:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,692:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,694:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,694:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,695:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,696:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,697:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,697:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:21,700:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,700:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,701:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,701:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,702:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,703:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,703:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,705:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,705:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,709:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,710:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,712:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,714:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,722:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:21,733:INFO:Calculating mean and std
2024-02-26 20:26:21,734:INFO:Creating metrics dataframe
2024-02-26 20:26:21,737:INFO:Uploading results into container
2024-02-26 20:26:21,737:INFO:Uploading model into container now
2024-02-26 20:26:21,738:INFO:_master_model_container: 4
2024-02-26 20:26:21,738:INFO:_display_container: 2
2024-02-26 20:26:21,738:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-26 20:26:21,738:INFO:create_model() successfully completed......................................
2024-02-26 20:26:21,844:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:21,844:INFO:Creating metrics dataframe
2024-02-26 20:26:21,850:INFO:Initializing Decision Tree Classifier
2024-02-26 20:26:21,850:INFO:Total runtime is 0.16609609921773275 minutes
2024-02-26 20:26:21,854:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:21,854:INFO:Initializing create_model()
2024-02-26 20:26:21,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:21,854:INFO:Checking exceptions
2024-02-26 20:26:21,854:INFO:Importing libraries
2024-02-26 20:26:21,854:INFO:Copying training dataset
2024-02-26 20:26:21,859:INFO:Defining folds
2024-02-26 20:26:21,859:INFO:Declaring metric variables
2024-02-26 20:26:21,861:INFO:Importing untrained model
2024-02-26 20:26:21,865:INFO:Decision Tree Classifier Imported successfully
2024-02-26 20:26:21,872:INFO:Starting cross validation
2024-02-26 20:26:21,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:22,102:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:22,106:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:22,106:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,109:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,109:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,111:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:22,116:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,116:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:22,116:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,116:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,118:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,121:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,124:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,125:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:22,125:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,126:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,127:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,128:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,128:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:22,129:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:22,130:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:22,132:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,132:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:22,133:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,134:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,134:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,134:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,135:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,137:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,140:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,142:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,142:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,143:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,143:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,144:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,148:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,149:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,151:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,153:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,163:INFO:Calculating mean and std
2024-02-26 20:26:22,164:INFO:Creating metrics dataframe
2024-02-26 20:26:22,166:INFO:Uploading results into container
2024-02-26 20:26:22,167:INFO:Uploading model into container now
2024-02-26 20:26:22,167:INFO:_master_model_container: 5
2024-02-26 20:26:22,167:INFO:_display_container: 2
2024-02-26 20:26:22,168:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-02-26 20:26:22,168:INFO:create_model() successfully completed......................................
2024-02-26 20:26:22,274:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:22,274:INFO:Creating metrics dataframe
2024-02-26 20:26:22,281:INFO:Initializing SVM - Linear Kernel
2024-02-26 20:26:22,281:INFO:Total runtime is 0.17327541510264077 minutes
2024-02-26 20:26:22,284:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:22,284:INFO:Initializing create_model()
2024-02-26 20:26:22,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:22,284:INFO:Checking exceptions
2024-02-26 20:26:22,284:INFO:Importing libraries
2024-02-26 20:26:22,285:INFO:Copying training dataset
2024-02-26 20:26:22,289:INFO:Defining folds
2024-02-26 20:26:22,289:INFO:Declaring metric variables
2024-02-26 20:26:22,293:INFO:Importing untrained model
2024-02-26 20:26:22,296:INFO:SVM - Linear Kernel Imported successfully
2024-02-26 20:26:22,301:INFO:Starting cross validation
2024-02-26 20:26:22,303:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:22,528:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,531:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,536:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,540:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,541:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,542:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,542:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,542:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,546:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,546:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,548:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,548:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,548:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,549:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,550:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,551:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,552:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,553:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,553:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,553:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,554:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,555:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,557:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,559:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,559:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,561:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,562:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,562:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,562:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,563:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,563:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,565:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,568:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,568:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,569:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,569:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,570:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,571:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,579:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,579:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,589:INFO:Calculating mean and std
2024-02-26 20:26:22,591:INFO:Creating metrics dataframe
2024-02-26 20:26:22,593:INFO:Uploading results into container
2024-02-26 20:26:22,593:INFO:Uploading model into container now
2024-02-26 20:26:22,594:INFO:_master_model_container: 6
2024-02-26 20:26:22,594:INFO:_display_container: 2
2024-02-26 20:26:22,595:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-26 20:26:22,595:INFO:create_model() successfully completed......................................
2024-02-26 20:26:22,701:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:22,701:INFO:Creating metrics dataframe
2024-02-26 20:26:22,707:INFO:Initializing Ridge Classifier
2024-02-26 20:26:22,707:INFO:Total runtime is 0.1803829312324524 minutes
2024-02-26 20:26:22,710:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:22,710:INFO:Initializing create_model()
2024-02-26 20:26:22,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:22,710:INFO:Checking exceptions
2024-02-26 20:26:22,711:INFO:Importing libraries
2024-02-26 20:26:22,711:INFO:Copying training dataset
2024-02-26 20:26:22,715:INFO:Defining folds
2024-02-26 20:26:22,716:INFO:Declaring metric variables
2024-02-26 20:26:22,719:INFO:Importing untrained model
2024-02-26 20:26:22,721:INFO:Ridge Classifier Imported successfully
2024-02-26 20:26:22,727:INFO:Starting cross validation
2024-02-26 20:26:22,729:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:22,968:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,969:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,969:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,971:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,972:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,972:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,973:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,973:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,974:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,975:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,975:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,976:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,977:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,977:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,978:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,980:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,980:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-26 20:26:22,981:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,981:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,983:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,983:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,985:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,986:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,986:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,986:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,987:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,988:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,990:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,992:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,993:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,993:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,994:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,994:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,996:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,997:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,998:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:22,999:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,001:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,013:INFO:Calculating mean and std
2024-02-26 20:26:23,015:INFO:Creating metrics dataframe
2024-02-26 20:26:23,017:INFO:Uploading results into container
2024-02-26 20:26:23,017:INFO:Uploading model into container now
2024-02-26 20:26:23,018:INFO:_master_model_container: 7
2024-02-26 20:26:23,018:INFO:_display_container: 2
2024-02-26 20:26:23,019:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-02-26 20:26:23,019:INFO:create_model() successfully completed......................................
2024-02-26 20:26:23,129:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:23,129:INFO:Creating metrics dataframe
2024-02-26 20:26:23,137:INFO:Initializing Random Forest Classifier
2024-02-26 20:26:23,137:INFO:Total runtime is 0.1875465432802836 minutes
2024-02-26 20:26:23,139:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:23,141:INFO:Initializing create_model()
2024-02-26 20:26:23,141:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:23,141:INFO:Checking exceptions
2024-02-26 20:26:23,141:INFO:Importing libraries
2024-02-26 20:26:23,142:INFO:Copying training dataset
2024-02-26 20:26:23,145:INFO:Defining folds
2024-02-26 20:26:23,145:INFO:Declaring metric variables
2024-02-26 20:26:23,148:INFO:Importing untrained model
2024-02-26 20:26:23,152:INFO:Random Forest Classifier Imported successfully
2024-02-26 20:26:23,158:INFO:Starting cross validation
2024-02-26 20:26:23,161:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:23,898:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:23,904:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,911:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:23,913:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:23,915:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:23,916:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,917:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,919:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,920:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,927:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,927:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:23,928:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:23,928:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,931:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,932:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,935:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,935:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,936:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:23,940:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:23,941:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,941:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,941:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,943:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,945:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,945:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,952:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,955:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,956:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,957:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,962:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:23,966:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,968:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,969:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,980:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:23,991:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,025:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:24,029:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,035:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,043:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,056:INFO:Calculating mean and std
2024-02-26 20:26:24,058:INFO:Creating metrics dataframe
2024-02-26 20:26:24,061:INFO:Uploading results into container
2024-02-26 20:26:24,062:INFO:Uploading model into container now
2024-02-26 20:26:24,062:INFO:_master_model_container: 8
2024-02-26 20:26:24,062:INFO:_display_container: 2
2024-02-26 20:26:24,063:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-02-26 20:26:24,064:INFO:create_model() successfully completed......................................
2024-02-26 20:26:24,196:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:24,196:INFO:Creating metrics dataframe
2024-02-26 20:26:24,206:INFO:Initializing Quadratic Discriminant Analysis
2024-02-26 20:26:24,206:INFO:Total runtime is 0.20535182555516562 minutes
2024-02-26 20:26:24,212:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:24,212:INFO:Initializing create_model()
2024-02-26 20:26:24,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:24,213:INFO:Checking exceptions
2024-02-26 20:26:24,213:INFO:Importing libraries
2024-02-26 20:26:24,213:INFO:Copying training dataset
2024-02-26 20:26:24,219:INFO:Defining folds
2024-02-26 20:26:24,219:INFO:Declaring metric variables
2024-02-26 20:26:24,225:INFO:Importing untrained model
2024-02-26 20:26:24,230:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-26 20:26:24,239:INFO:Starting cross validation
2024-02-26 20:26:24,243:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:24,515:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 20:26:24,571:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 20:26:24,578:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 20:26:24,593:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 20:26:24,602:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 20:26:24,603:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 20:26:24,619:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 20:26:24,615:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 20:26:24,627:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 20:26:24,664:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:24,668:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:24,671:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,677:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,683:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,686:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:24,693:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,694:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:24,696:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,699:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,700:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,705:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:24,706:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,709:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-26 20:26:24,710:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,711:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:24,711:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,713:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,715:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:24,717:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,720:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,720:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,722:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,732:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,733:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,733:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,734:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,736:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:24,742:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,742:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,745:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,746:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,754:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,755:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,761:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,767:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,779:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:24,785:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,791:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,801:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:24,815:INFO:Calculating mean and std
2024-02-26 20:26:24,817:INFO:Creating metrics dataframe
2024-02-26 20:26:24,819:INFO:Uploading results into container
2024-02-26 20:26:24,820:INFO:Uploading model into container now
2024-02-26 20:26:24,820:INFO:_master_model_container: 9
2024-02-26 20:26:24,820:INFO:_display_container: 2
2024-02-26 20:26:24,820:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-26 20:26:24,820:INFO:create_model() successfully completed......................................
2024-02-26 20:26:24,932:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:24,932:INFO:Creating metrics dataframe
2024-02-26 20:26:24,941:INFO:Initializing Ada Boost Classifier
2024-02-26 20:26:24,941:INFO:Total runtime is 0.2176118016242981 minutes
2024-02-26 20:26:24,945:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:24,945:INFO:Initializing create_model()
2024-02-26 20:26:24,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:24,946:INFO:Checking exceptions
2024-02-26 20:26:24,946:INFO:Importing libraries
2024-02-26 20:26:24,946:INFO:Copying training dataset
2024-02-26 20:26:24,951:INFO:Defining folds
2024-02-26 20:26:24,951:INFO:Declaring metric variables
2024-02-26 20:26:24,955:INFO:Importing untrained model
2024-02-26 20:26:24,959:INFO:Ada Boost Classifier Imported successfully
2024-02-26 20:26:24,965:INFO:Starting cross validation
2024-02-26 20:26:24,968:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:25,185:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-02-26 20:26:25,203:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-02-26 20:26:25,224:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-02-26 20:26:25,229:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-02-26 20:26:25,239:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-02-26 20:26:25,252:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-02-26 20:26:25,257:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-02-26 20:26:25,257:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-02-26 20:26:25,288:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-02-26 20:26:25,289:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-02-26 20:26:25,585:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:25,590:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,597:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:25,598:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,602:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,605:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,613:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:25,614:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,615:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:25,617:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,619:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,625:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,626:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,627:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,630:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:25,633:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,634:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,635:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:25,635:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,635:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:25,640:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,640:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,644:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:25,645:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,647:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,648:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,651:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,652:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:25,652:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,654:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,654:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,655:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,655:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:25,659:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,661:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,662:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,663:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,665:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,668:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,671:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:25,681:INFO:Calculating mean and std
2024-02-26 20:26:25,682:INFO:Creating metrics dataframe
2024-02-26 20:26:25,685:INFO:Uploading results into container
2024-02-26 20:26:25,685:INFO:Uploading model into container now
2024-02-26 20:26:25,686:INFO:_master_model_container: 10
2024-02-26 20:26:25,686:INFO:_display_container: 2
2024-02-26 20:26:25,686:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-02-26 20:26:25,686:INFO:create_model() successfully completed......................................
2024-02-26 20:26:25,791:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:25,791:INFO:Creating metrics dataframe
2024-02-26 20:26:25,800:INFO:Initializing Gradient Boosting Classifier
2024-02-26 20:26:25,800:INFO:Total runtime is 0.23192195892333986 minutes
2024-02-26 20:26:25,803:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:25,803:INFO:Initializing create_model()
2024-02-26 20:26:25,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:25,803:INFO:Checking exceptions
2024-02-26 20:26:25,804:INFO:Importing libraries
2024-02-26 20:26:25,804:INFO:Copying training dataset
2024-02-26 20:26:25,808:INFO:Defining folds
2024-02-26 20:26:25,808:INFO:Declaring metric variables
2024-02-26 20:26:25,811:INFO:Importing untrained model
2024-02-26 20:26:25,814:INFO:Gradient Boosting Classifier Imported successfully
2024-02-26 20:26:25,819:INFO:Starting cross validation
2024-02-26 20:26:25,822:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:26,565:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:26,571:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,583:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,593:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,594:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:26,599:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,611:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,611:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:26,617:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,617:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:26,622:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,622:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,625:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:26,626:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,626:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:26,629:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,630:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:26,632:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,633:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,634:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,635:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,637:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:26,637:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,640:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,642:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,642:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,643:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,647:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,647:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,649:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,652:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:26,652:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,654:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,654:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:26,656:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,657:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,663:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,664:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,669:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,670:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:26,678:INFO:Calculating mean and std
2024-02-26 20:26:26,680:INFO:Creating metrics dataframe
2024-02-26 20:26:26,682:INFO:Uploading results into container
2024-02-26 20:26:26,682:INFO:Uploading model into container now
2024-02-26 20:26:26,684:INFO:_master_model_container: 11
2024-02-26 20:26:26,684:INFO:_display_container: 2
2024-02-26 20:26:26,684:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-26 20:26:26,684:INFO:create_model() successfully completed......................................
2024-02-26 20:26:26,790:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:26,790:INFO:Creating metrics dataframe
2024-02-26 20:26:26,798:INFO:Initializing Linear Discriminant Analysis
2024-02-26 20:26:26,798:INFO:Total runtime is 0.24855589866638186 minutes
2024-02-26 20:26:26,801:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:26,802:INFO:Initializing create_model()
2024-02-26 20:26:26,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:26,802:INFO:Checking exceptions
2024-02-26 20:26:26,802:INFO:Importing libraries
2024-02-26 20:26:26,802:INFO:Copying training dataset
2024-02-26 20:26:26,807:INFO:Defining folds
2024-02-26 20:26:26,807:INFO:Declaring metric variables
2024-02-26 20:26:26,811:INFO:Importing untrained model
2024-02-26 20:26:26,814:INFO:Linear Discriminant Analysis Imported successfully
2024-02-26 20:26:26,821:INFO:Starting cross validation
2024-02-26 20:26:26,824:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:27,146:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,147:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,148:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,149:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,150:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,150:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,150:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,153:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,153:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,153:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,154:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,155:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,155:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,156:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,156:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,156:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,157:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,159:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,161:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,163:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,164:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,164:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,165:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,165:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,166:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,166:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,167:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,172:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,174:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,174:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,176:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,176:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,176:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,176:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,177:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,178:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,182:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,182:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,198:INFO:Calculating mean and std
2024-02-26 20:26:27,200:INFO:Creating metrics dataframe
2024-02-26 20:26:27,203:INFO:Uploading results into container
2024-02-26 20:26:27,203:INFO:Uploading model into container now
2024-02-26 20:26:27,204:INFO:_master_model_container: 12
2024-02-26 20:26:27,204:INFO:_display_container: 2
2024-02-26 20:26:27,204:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-26 20:26:27,204:INFO:create_model() successfully completed......................................
2024-02-26 20:26:27,315:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:27,315:INFO:Creating metrics dataframe
2024-02-26 20:26:27,323:INFO:Initializing Extra Trees Classifier
2024-02-26 20:26:27,324:INFO:Total runtime is 0.25733166535695395 minutes
2024-02-26 20:26:27,327:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:27,327:INFO:Initializing create_model()
2024-02-26 20:26:27,327:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:27,327:INFO:Checking exceptions
2024-02-26 20:26:27,327:INFO:Importing libraries
2024-02-26 20:26:27,328:INFO:Copying training dataset
2024-02-26 20:26:27,331:INFO:Defining folds
2024-02-26 20:26:27,331:INFO:Declaring metric variables
2024-02-26 20:26:27,335:INFO:Importing untrained model
2024-02-26 20:26:27,338:INFO:Extra Trees Classifier Imported successfully
2024-02-26 20:26:27,344:INFO:Starting cross validation
2024-02-26 20:26:27,346:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:27,972:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,973:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,977:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,977:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,978:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,978:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,982:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,984:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,984:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,986:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:27,988:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,991:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,992:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,993:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,995:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:27,995:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,000:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,001:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,002:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,003:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,004:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:28,004:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,006:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,008:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,011:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:28,014:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,016:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,018:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,023:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,028:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,031:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,033:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:28,037:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,043:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,049:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:28,049:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,052:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,058:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,064:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:28,073:INFO:Calculating mean and std
2024-02-26 20:26:28,075:INFO:Creating metrics dataframe
2024-02-26 20:26:28,077:INFO:Uploading results into container
2024-02-26 20:26:28,077:INFO:Uploading model into container now
2024-02-26 20:26:28,078:INFO:_master_model_container: 13
2024-02-26 20:26:28,078:INFO:_display_container: 2
2024-02-26 20:26:28,078:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-02-26 20:26:28,078:INFO:create_model() successfully completed......................................
2024-02-26 20:26:28,194:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:28,194:INFO:Creating metrics dataframe
2024-02-26 20:26:28,204:INFO:Initializing Extreme Gradient Boosting
2024-02-26 20:26:28,205:INFO:Total runtime is 0.2720012903213501 minutes
2024-02-26 20:26:28,207:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:28,208:INFO:Initializing create_model()
2024-02-26 20:26:28,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:28,208:INFO:Checking exceptions
2024-02-26 20:26:28,208:INFO:Importing libraries
2024-02-26 20:26:28,208:INFO:Copying training dataset
2024-02-26 20:26:28,213:INFO:Defining folds
2024-02-26 20:26:28,213:INFO:Declaring metric variables
2024-02-26 20:26:28,216:INFO:Importing untrained model
2024-02-26 20:26:28,220:INFO:Extreme Gradient Boosting Imported successfully
2024-02-26 20:26:28,227:INFO:Starting cross validation
2024-02-26 20:26:28,231:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:29,531:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:29,535:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,541:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,547:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:29,548:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:29,551:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:29,552:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,553:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,553:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,554:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:29,556:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,557:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,558:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:29,559:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:29,562:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:29,563:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,564:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,564:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,565:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,565:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,565:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:29,566:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,566:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,569:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,571:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:29,572:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,573:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,573:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,574:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,575:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,575:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,575:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,575:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,577:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,580:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,582:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,584:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,584:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,586:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,594:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:29,603:INFO:Calculating mean and std
2024-02-26 20:26:29,605:INFO:Creating metrics dataframe
2024-02-26 20:26:29,607:INFO:Uploading results into container
2024-02-26 20:26:29,607:INFO:Uploading model into container now
2024-02-26 20:26:29,608:INFO:_master_model_container: 14
2024-02-26 20:26:29,608:INFO:_display_container: 2
2024-02-26 20:26:29,609:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2024-02-26 20:26:29,609:INFO:create_model() successfully completed......................................
2024-02-26 20:26:29,720:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:29,721:INFO:Creating metrics dataframe
2024-02-26 20:26:29,729:INFO:Initializing Light Gradient Boosting Machine
2024-02-26 20:26:29,730:INFO:Total runtime is 0.2974327802658081 minutes
2024-02-26 20:26:29,733:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:29,733:INFO:Initializing create_model()
2024-02-26 20:26:29,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:29,734:INFO:Checking exceptions
2024-02-26 20:26:29,734:INFO:Importing libraries
2024-02-26 20:26:29,734:INFO:Copying training dataset
2024-02-26 20:26:29,738:INFO:Defining folds
2024-02-26 20:26:29,738:INFO:Declaring metric variables
2024-02-26 20:26:29,741:INFO:Importing untrained model
2024-02-26 20:26:29,744:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-26 20:26:29,749:INFO:Starting cross validation
2024-02-26 20:26:29,753:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:30,841:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:30,847:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,854:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:30,859:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,861:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,866:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:30,868:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:30,869:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,872:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,872:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,873:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,883:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,883:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,893:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,956:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:30,961:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,963:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:30,968:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,972:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,979:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:30,980:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,983:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,985:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,996:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,999:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:30,999:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:31,004:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:31,006:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:31,014:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:31,025:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:31,138:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:31,140:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:31,143:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:31,145:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:31,153:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:31,154:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:31,163:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:31,165:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:31,180:INFO:Calculating mean and std
2024-02-26 20:26:31,182:INFO:Creating metrics dataframe
2024-02-26 20:26:31,186:INFO:Uploading results into container
2024-02-26 20:26:31,186:INFO:Uploading model into container now
2024-02-26 20:26:31,187:INFO:_master_model_container: 15
2024-02-26 20:26:31,187:INFO:_display_container: 2
2024-02-26 20:26:31,188:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-26 20:26:31,189:INFO:create_model() successfully completed......................................
2024-02-26 20:26:31,319:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:31,319:INFO:Creating metrics dataframe
2024-02-26 20:26:31,330:INFO:Initializing CatBoost Classifier
2024-02-26 20:26:31,330:INFO:Total runtime is 0.32408915758132933 minutes
2024-02-26 20:26:31,333:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:31,333:INFO:Initializing create_model()
2024-02-26 20:26:31,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:31,333:INFO:Checking exceptions
2024-02-26 20:26:31,334:INFO:Importing libraries
2024-02-26 20:26:31,334:INFO:Copying training dataset
2024-02-26 20:26:31,339:INFO:Defining folds
2024-02-26 20:26:31,340:INFO:Declaring metric variables
2024-02-26 20:26:31,342:INFO:Importing untrained model
2024-02-26 20:26:31,347:INFO:CatBoost Classifier Imported successfully
2024-02-26 20:26:31,353:INFO:Starting cross validation
2024-02-26 20:26:31,355:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:37,176:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:37,183:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:37,198:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:37,299:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,182:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:39,190:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,203:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,215:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,233:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:39,241:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,253:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,268:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,381:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:39,389:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,396:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:39,402:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,404:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,417:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,425:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:39,431:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:40,061:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:40,067:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:40,079:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:40,080:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:40,085:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:40,089:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:40,098:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:40,109:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:40,801:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:40,803:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:40,808:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:40,813:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:40,821:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
2 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\joblib\memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\catboost\core.py", line 5131, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\catboost\core.py", line 2357, in _fit
    self._train(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\catboost\core.py", line 1761, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 4624, in _catboost._CatBoost._train
  File "_catboost.pyx", line 4673, in _catboost._CatBoost._train
_catboost.CatBoostError: C:/Go_Agent/pipelines/BuildMaster/catboost.git/catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-02-26 20:26:40,822:INFO:Calculating mean and std
2024-02-26 20:26:40,823:INFO:Creating metrics dataframe
2024-02-26 20:26:40,824:INFO:Uploading results into container
2024-02-26 20:26:40,825:INFO:Uploading model into container now
2024-02-26 20:26:40,825:INFO:_master_model_container: 16
2024-02-26 20:26:40,825:INFO:_display_container: 2
2024-02-26 20:26:40,825:INFO:<catboost.core.CatBoostClassifier object at 0x00000168699DCF40>
2024-02-26 20:26:40,825:INFO:create_model() successfully completed......................................
2024-02-26 20:26:40,935:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:40,935:INFO:Creating metrics dataframe
2024-02-26 20:26:40,945:INFO:Initializing Dummy Classifier
2024-02-26 20:26:40,946:INFO:Total runtime is 0.48436028162638345 minutes
2024-02-26 20:26:40,949:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:40,949:INFO:Initializing create_model()
2024-02-26 20:26:40,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001686231B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:40,950:INFO:Checking exceptions
2024-02-26 20:26:40,950:INFO:Importing libraries
2024-02-26 20:26:40,950:INFO:Copying training dataset
2024-02-26 20:26:40,955:INFO:Defining folds
2024-02-26 20:26:40,955:INFO:Declaring metric variables
2024-02-26 20:26:40,960:INFO:Importing untrained model
2024-02-26 20:26:40,963:INFO:Dummy Classifier Imported successfully
2024-02-26 20:26:40,969:INFO:Starting cross validation
2024-02-26 20:26:40,972:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:41,206:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:41,207:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:41,207:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:41,211:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,211:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,214:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,215:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:41,222:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,223:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,224:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,227:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-02-26 20:26:41,229:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,230:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-02-26 20:26:41,232:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,232:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,237:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,237:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:41,237:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-02-26 20:26:41,241:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-02-26 20:26:41,241:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,243:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,248:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,255:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,261:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-02-26 20:26:41,265:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,283:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:41,288:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,297:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:41,299:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,300:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,300:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:41,300:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:41,302:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-02-26 20:26:41,303:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,305:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,306:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,307:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,309:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,311:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-02-26 20:26:41,313:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-02-26 20:26:41,314:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,316:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,317:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,318:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-02-26 20:26:41,324:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,328:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:41,331:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,337:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,342:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-02-26 20:26:41,345:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:41,354:INFO:Calculating mean and std
2024-02-26 20:26:41,359:INFO:Creating metrics dataframe
2024-02-26 20:26:41,361:INFO:Uploading results into container
2024-02-26 20:26:41,362:INFO:Uploading model into container now
2024-02-26 20:26:41,362:INFO:_master_model_container: 17
2024-02-26 20:26:41,363:INFO:_display_container: 2
2024-02-26 20:26:41,363:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-02-26 20:26:41,363:INFO:create_model() successfully completed......................................
2024-02-26 20:26:41,472:INFO:SubProcess create_model() end ==================================
2024-02-26 20:26:41,472:INFO:Creating metrics dataframe
2024-02-26 20:26:41,483:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-02-26 20:26:41,491:INFO:Initializing create_model()
2024-02-26 20:26:41,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:41,491:INFO:Checking exceptions
2024-02-26 20:26:41,493:INFO:Importing libraries
2024-02-26 20:26:41,493:INFO:Copying training dataset
2024-02-26 20:26:41,496:INFO:Defining folds
2024-02-26 20:26:41,496:INFO:Declaring metric variables
2024-02-26 20:26:41,497:INFO:Importing untrained model
2024-02-26 20:26:41,497:INFO:Declaring custom model
2024-02-26 20:26:41,497:INFO:Decision Tree Classifier Imported successfully
2024-02-26 20:26:41,499:INFO:Cross validation set to False
2024-02-26 20:26:41,499:INFO:Fitting Model
2024-02-26 20:26:41,589:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-02-26 20:26:41,589:INFO:create_model() successfully completed......................................
2024-02-26 20:26:41,719:INFO:_master_model_container: 17
2024-02-26 20:26:41,719:INFO:_display_container: 2
2024-02-26 20:26:41,720:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-02-26 20:26:41,720:INFO:compare_models() successfully completed......................................
2024-02-26 20:26:41,737:INFO:Initializing create_model()
2024-02-26 20:26:41,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:26:41,737:INFO:Checking exceptions
2024-02-26 20:26:41,752:INFO:Importing libraries
2024-02-26 20:26:41,752:INFO:Copying training dataset
2024-02-26 20:26:41,759:INFO:Defining folds
2024-02-26 20:26:41,759:INFO:Declaring metric variables
2024-02-26 20:26:41,763:INFO:Importing untrained model
2024-02-26 20:26:41,767:INFO:Random Forest Classifier Imported successfully
2024-02-26 20:26:41,774:INFO:Starting cross validation
2024-02-26 20:26:41,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:42,637:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:42,644:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,660:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,662:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:42,665:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:42,669:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,670:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,684:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,686:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,687:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,689:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:42,692:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:42,694:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,697:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,702:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:42,702:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,702:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,703:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:42,705:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,709:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,709:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,710:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,717:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,720:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,721:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,723:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,730:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,732:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,815:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:42,818:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,825:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,834:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,835:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:42,838:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,844:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,850:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,887:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:42,889:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,895:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,901:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:42,909:INFO:Calculating mean and std
2024-02-26 20:26:42,910:INFO:Creating metrics dataframe
2024-02-26 20:26:42,916:INFO:Finalizing model
2024-02-26 20:26:43,211:INFO:Uploading results into container
2024-02-26 20:26:43,211:INFO:Uploading model into container now
2024-02-26 20:26:43,222:INFO:_master_model_container: 18
2024-02-26 20:26:43,222:INFO:_display_container: 3
2024-02-26 20:26:43,223:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-02-26 20:26:43,223:INFO:create_model() successfully completed......................................
2024-02-26 20:26:46,665:INFO:Initializing tune_model()
2024-02-26 20:26:46,665:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>)
2024-02-26 20:26:46,666:INFO:Checking exceptions
2024-02-26 20:26:46,686:INFO:Copying training dataset
2024-02-26 20:26:46,693:INFO:Checking base model
2024-02-26 20:26:46,693:INFO:Base model : Random Forest Classifier
2024-02-26 20:26:46,697:INFO:Declaring metric variables
2024-02-26 20:26:46,703:INFO:Defining Hyperparameters
2024-02-26 20:26:46,850:INFO:Tuning with n_jobs=-1
2024-02-26 20:26:46,850:INFO:Initializing RandomizedSearchCV
2024-02-26 20:26:57,165:INFO:best_params: {'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2024-02-26 20:26:57,166:INFO:Hyperparameter search completed
2024-02-26 20:26:57,166:INFO:SubProcess create_model() called ==================================
2024-02-26 20:26:57,167:INFO:Initializing create_model()
2024-02-26 20:26:57,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001683EA559F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2024-02-26 20:26:57,169:INFO:Checking exceptions
2024-02-26 20:26:57,169:INFO:Importing libraries
2024-02-26 20:26:57,169:INFO:Copying training dataset
2024-02-26 20:26:57,178:INFO:Defining folds
2024-02-26 20:26:57,178:INFO:Declaring metric variables
2024-02-26 20:26:57,184:INFO:Importing untrained model
2024-02-26 20:26:57,185:INFO:Declaring custom model
2024-02-26 20:26:57,192:INFO:Random Forest Classifier Imported successfully
2024-02-26 20:26:57,203:INFO:Starting cross validation
2024-02-26 20:26:57,207:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:26:58,689:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:58,698:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:58,711:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:58,790:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:58,794:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:58,797:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:58,811:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:58,850:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:58,942:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:58,948:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:58,961:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,000:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,022:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:59,028:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,043:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,056:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:59,060:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,064:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,078:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,095:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,101:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:59,107:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,121:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,137:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,187:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:59,195:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,200:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:59,207:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,208:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,210:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:59,216:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,219:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,220:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,221:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:26:59,227:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,228:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,232:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,240:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,242:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,254:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:26:59,274:INFO:Calculating mean and std
2024-02-26 20:26:59,276:INFO:Creating metrics dataframe
2024-02-26 20:26:59,289:INFO:Finalizing model
2024-02-26 20:27:00,193:INFO:Uploading results into container
2024-02-26 20:27:00,195:INFO:Uploading model into container now
2024-02-26 20:27:00,197:INFO:_master_model_container: 19
2024-02-26 20:27:00,197:INFO:_display_container: 4
2024-02-26 20:27:00,199:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0,
                       min_samples_leaf=4, min_samples_split=7,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=200, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-02-26 20:27:00,200:INFO:create_model() successfully completed......................................
2024-02-26 20:27:00,392:INFO:SubProcess create_model() end ==================================
2024-02-26 20:27:00,392:INFO:choose_better activated
2024-02-26 20:27:00,398:INFO:SubProcess create_model() called ==================================
2024-02-26 20:27:00,400:INFO:Initializing create_model()
2024-02-26 20:27:00,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-26 20:27:00,401:INFO:Checking exceptions
2024-02-26 20:27:00,404:INFO:Importing libraries
2024-02-26 20:27:00,404:INFO:Copying training dataset
2024-02-26 20:27:00,411:INFO:Defining folds
2024-02-26 20:27:00,411:INFO:Declaring metric variables
2024-02-26 20:27:00,413:INFO:Importing untrained model
2024-02-26 20:27:00,413:INFO:Declaring custom model
2024-02-26 20:27:00,414:INFO:Random Forest Classifier Imported successfully
2024-02-26 20:27:00,415:INFO:Starting cross validation
2024-02-26 20:27:00,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-26 20:27:01,230:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:27:01,233:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:27:01,237:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,238:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:27:01,238:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:27:01,239:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,239:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:27:01,243:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,244:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,245:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,247:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:27:01,247:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:27:01,249:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,251:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,252:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,254:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,255:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,257:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,260:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,264:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,266:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,266:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,268:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,270:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,273:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,278:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,281:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:27:01,282:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,284:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,288:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,299:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,309:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,400:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:27:01,405:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,415:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,429:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,450:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-02-26 20:27:01,453:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,461:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,469:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'poisonous') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-26 20:27:01,480:INFO:Calculating mean and std
2024-02-26 20:27:01,481:INFO:Creating metrics dataframe
2024-02-26 20:27:01,483:INFO:Finalizing model
2024-02-26 20:27:01,836:INFO:Uploading results into container
2024-02-26 20:27:01,837:INFO:Uploading model into container now
2024-02-26 20:27:01,837:INFO:_master_model_container: 20
2024-02-26 20:27:01,838:INFO:_display_container: 5
2024-02-26 20:27:01,838:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-02-26 20:27:01,838:INFO:create_model() successfully completed......................................
2024-02-26 20:27:01,965:INFO:SubProcess create_model() end ==================================
2024-02-26 20:27:01,965:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.9949
2024-02-26 20:27:01,966:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0,
                       min_samples_leaf=4, min_samples_split=7,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=200, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.9942
2024-02-26 20:27:01,966:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-02-26 20:27:01,966:INFO:choose_better completed
2024-02-26 20:27:01,967:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-02-26 20:27:01,977:INFO:_master_model_container: 20
2024-02-26 20:27:01,978:INFO:_display_container: 4
2024-02-26 20:27:01,978:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-02-26 20:27:01,978:INFO:tune_model() successfully completed......................................
2024-02-26 20:27:02,131:INFO:Initializing evaluate_model()
2024-02-26 20:27:02,131:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-26 20:27:02,152:INFO:Initializing plot_model()
2024-02-26 20:27:02,152:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, system=True)
2024-02-26 20:27:02,153:INFO:Checking exceptions
2024-02-26 20:27:02,182:INFO:Preloading libraries
2024-02-26 20:27:02,193:INFO:Copying training dataset
2024-02-26 20:27:02,193:INFO:Plot type: pipeline
2024-02-26 20:27:02,522:INFO:Visual Rendered Successfully
2024-02-26 20:27:02,639:INFO:plot_model() successfully completed......................................
2024-02-26 20:28:37,351:INFO:Initializing predict_model()
2024-02-26 20:28:37,351:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016865734490>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000168657B4E50>)
2024-02-26 20:28:37,351:INFO:Checking exceptions
2024-02-26 20:28:37,351:INFO:Preloading libraries
2024-02-26 20:28:37,353:INFO:Set up data.
2024-02-26 20:28:37,356:INFO:Set up index.
2024-02-26 20:28:37,634:INFO:Initializing save_model()
2024-02-26 20:28:37,635:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), model_name=final_model_mushroom, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-26 20:28:37,635:INFO:Adding model into prep_pipe
2024-02-26 20:28:37,693:INFO:final_model_mushroom.pkl saved in current working directory
2024-02-26 20:28:37,714:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-02-26 20:28:37,714:INFO:save_model() successfully completed......................................
2024-02-26 20:28:37,888:INFO:PyCaret ClassificationExperiment
2024-02-26 20:28:37,888:INFO:Logging name: mushroom_classification
2024-02-26 20:28:37,888:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-26 20:28:37,888:INFO:version 3.3.0
2024-02-26 20:28:37,888:INFO:Initializing setup()
2024-02-26 20:28:37,888:INFO:self.USI: c63e
2024-02-26 20:28:37,888:INFO:self._variable_keys: {'y_test', 'gpu_param', 'gpu_n_jobs_param', 'log_plots_param', 'USI', 'y_train', 'fold_groups_param', 'data', '_ml_usecase', 'pipeline', '_available_plots', 'exp_id', 'exp_name_log', 'fold_generator', 'y', 'n_jobs_param', 'memory', 'seed', 'html_param', 'X_train', 'X_test', 'fold_shuffle_param', 'X', 'is_multiclass', 'target_param', 'logging_param', 'fix_imbalance', 'idx'}
2024-02-26 20:28:37,888:INFO:Checking environment
2024-02-26 20:28:37,888:INFO:python_version: 3.10.13
2024-02-26 20:28:37,889:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-26 20:28:37,889:INFO:machine: AMD64
2024-02-26 20:28:37,889:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-26 20:28:37,895:INFO:Memory: svmem(total=34204610560, available=9253269504, percent=72.9, used=24951341056, free=9253269504)
2024-02-26 20:28:37,896:INFO:Physical Core: 8
2024-02-26 20:28:37,896:INFO:Logical Core: 16
2024-02-26 20:28:37,896:INFO:Checking libraries
2024-02-26 20:28:37,896:INFO:System:
2024-02-26 20:28:37,896:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-26 20:28:37,896:INFO:executable: C:\Users\nasru\anaconda3\envs\mlops\python.exe
2024-02-26 20:28:37,896:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-26 20:28:37,896:INFO:PyCaret required dependencies:
2024-02-26 20:28:37,896:INFO:                 pip: 24.0
2024-02-26 20:28:37,896:INFO:          setuptools: 68.2.2
2024-02-26 20:28:37,896:INFO:             pycaret: 3.3.0
2024-02-26 20:28:37,897:INFO:             IPython: 8.22.1
2024-02-26 20:28:37,897:INFO:          ipywidgets: 8.1.2
2024-02-26 20:28:37,897:INFO:                tqdm: 4.66.1
2024-02-26 20:28:37,897:INFO:               numpy: 1.25.2
2024-02-26 20:28:37,897:INFO:              pandas: 2.1.4
2024-02-26 20:28:37,897:INFO:              jinja2: 3.1.3
2024-02-26 20:28:37,897:INFO:               scipy: 1.11.4
2024-02-26 20:28:37,897:INFO:              joblib: 1.3.2
2024-02-26 20:28:37,897:INFO:             sklearn: 1.4.1.post1
2024-02-26 20:28:37,897:INFO:                pyod: 1.1.3
2024-02-26 20:28:37,897:INFO:            imblearn: 0.12.0
2024-02-26 20:28:37,897:INFO:   category_encoders: 2.6.3
2024-02-26 20:28:37,897:INFO:            lightgbm: 4.1.0
2024-02-26 20:28:37,897:INFO:               numba: 0.59.0
2024-02-26 20:28:37,897:INFO:            requests: 2.31.0
2024-02-26 20:28:37,897:INFO:          matplotlib: 3.7.5
2024-02-26 20:28:37,897:INFO:          scikitplot: 0.3.7
2024-02-26 20:28:37,897:INFO:         yellowbrick: 1.5
2024-02-26 20:28:37,898:INFO:              plotly: 5.9.0
2024-02-26 20:28:37,898:INFO:    plotly-resampler: Not installed
2024-02-26 20:28:37,898:INFO:             kaleido: 0.2.1
2024-02-26 20:28:37,898:INFO:           schemdraw: 0.15
2024-02-26 20:28:37,898:INFO:         statsmodels: 0.14.1
2024-02-26 20:28:37,898:INFO:              sktime: 0.26.0
2024-02-26 20:28:37,898:INFO:               tbats: 1.1.3
2024-02-26 20:28:37,898:INFO:            pmdarima: 2.0.4
2024-02-26 20:28:37,898:INFO:              psutil: 5.9.8
2024-02-26 20:28:37,898:INFO:          markupsafe: 2.1.5
2024-02-26 20:28:37,898:INFO:             pickle5: Not installed
2024-02-26 20:28:37,898:INFO:         cloudpickle: 2.2.1
2024-02-26 20:28:37,898:INFO:         deprecation: 2.1.0
2024-02-26 20:28:37,898:INFO:              xxhash: 3.4.1
2024-02-26 20:28:37,898:INFO:           wurlitzer: 3.0.3
2024-02-26 20:28:37,898:INFO:PyCaret optional dependencies:
2024-02-26 20:28:37,898:INFO:                shap: Not installed
2024-02-26 20:28:37,898:INFO:           interpret: Not installed
2024-02-26 20:28:37,899:INFO:                umap: 0.5.4
2024-02-26 20:28:37,899:INFO:     ydata_profiling: Not installed
2024-02-26 20:28:37,899:INFO:  explainerdashboard: Not installed
2024-02-26 20:28:37,899:INFO:             autoviz: Not installed
2024-02-26 20:28:37,899:INFO:           fairlearn: Not installed
2024-02-26 20:28:37,899:INFO:          deepchecks: Not installed
2024-02-26 20:28:37,899:INFO:             xgboost: 1.7.3
2024-02-26 20:28:37,899:INFO:            catboost: 1.2
2024-02-26 20:28:37,899:INFO:              kmodes: 0.12.2
2024-02-26 20:28:37,899:INFO:             mlxtend: 0.23.1
2024-02-26 20:28:37,899:INFO:       statsforecast: Not installed
2024-02-26 20:28:37,899:INFO:        tune_sklearn: Not installed
2024-02-26 20:28:37,899:INFO:                 ray: Not installed
2024-02-26 20:28:37,899:INFO:            hyperopt: Not installed
2024-02-26 20:28:37,899:INFO:              optuna: Not installed
2024-02-26 20:28:37,899:INFO:               skopt: Not installed
2024-02-26 20:28:37,899:INFO:              mlflow: 2.9.2
2024-02-26 20:28:37,900:INFO:              gradio: Not installed
2024-02-26 20:28:37,900:INFO:             fastapi: Not installed
2024-02-26 20:28:37,900:INFO:             uvicorn: Not installed
2024-02-26 20:28:37,900:INFO:              m2cgen: Not installed
2024-02-26 20:28:37,900:INFO:           evidently: Not installed
2024-02-26 20:28:37,900:INFO:               fugue: Not installed
2024-02-26 20:28:37,900:INFO:           streamlit: Not installed
2024-02-26 20:28:37,900:INFO:             prophet: Not installed
2024-02-26 20:28:37,900:INFO:None
2024-02-26 20:28:37,900:INFO:Set up data.
2024-02-26 20:28:37,909:INFO:Set up folding strategy.
2024-02-26 20:28:37,910:INFO:Set up train/test split.
2024-02-26 20:28:37,920:INFO:Set up index.
2024-02-26 20:28:37,921:INFO:Assigning column types.
2024-02-26 20:28:37,924:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-26 20:28:37,979:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 20:28:37,980:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 20:28:38,012:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:28:38,014:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:28:38,061:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-26 20:28:38,062:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 20:28:38,099:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:28:38,104:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:28:38,105:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-26 20:28:38,147:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 20:28:38,183:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:28:38,189:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:28:38,279:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-26 20:28:38,321:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:28:38,325:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:28:38,325:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-26 20:28:38,422:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:28:38,425:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:28:38,507:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:28:38,510:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:28:38,511:INFO:Preparing preprocessing pipeline...
2024-02-26 20:28:38,512:INFO:Set up label encoding.
2024-02-26 20:28:38,512:INFO:Set up simple imputation.
2024-02-26 20:28:38,514:INFO:Set up encoding of ordinal features.
2024-02-26 20:28:38,516:INFO:Set up encoding of categorical features.
2024-02-26 20:28:38,517:INFO:Set up column name cleaning.
2024-02-26 20:28:38,646:INFO:Finished creating preprocessing pipeline.
2024-02-26 20:28:38,671:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-26 20:28:38,671:INFO:Creating final display dataframe.
2024-02-26 20:28:39,041:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     1944
1                        Target                    class
2                   Target type                   Binary
3                Target mapping  edible: 0, poisonous: 1
4           Original data shape                (8124, 6)
5        Transformed data shape               (8124, 31)
6   Transformed train set shape               (5686, 31)
7    Transformed test set shape               (2438, 31)
8          Categorical features                        5
9                    Preprocess                     True
10              Imputation type                   simple
11           Numeric imputation                     mean
12       Categorical imputation                     mode
13     Maximum one-hot encoding                       25
14              Encoding method                     None
15               Fold Generator          StratifiedKFold
16                  Fold Number                       10
17                     CPU Jobs                       -1
18                      Use GPU                    False
19               Log Experiment             MlflowLogger
20              Experiment Name  mushroom_classification
21                          USI                     c63e
2024-02-26 20:28:39,137:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:28:39,140:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:28:39,229:INFO:Soft dependency imported: xgboost: 1.7.3
2024-02-26 20:28:39,232:INFO:Soft dependency imported: catboost: 1.2
2024-02-26 20:28:39,232:WARNING:C:\Users\nasru\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-02-26 20:28:39,233:INFO:Logging experiment in loggers
2024-02-26 20:28:39,491:INFO:SubProcess save_model() called ==================================
2024-02-26 20:28:39,528:INFO:Initializing save_model()
2024-02-26 20:28:39,528:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\nasru\AppData\Local\Temp\tmp_o8_8out\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-26 20:28:39,528:INFO:Adding model into prep_pipe
2024-02-26 20:28:39,528:WARNING:Only Model saved as it was a pipeline.
2024-02-26 20:28:39,538:INFO:C:\Users\nasru\AppData\Local\Temp\tmp_o8_8out\Transformation Pipeline.pkl saved in current working directory
2024-02-26 20:28:39,557:INFO:Pipeline(memory=FastMemory(location=C:\Users\nasru\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-26 20:28:39,557:INFO:save_model() successfully completed......................................
2024-02-26 20:28:39,672:INFO:SubProcess save_model() end ==================================
2024-02-26 20:28:39,687:INFO:setup() successfully completed in 1.37s...............
2024-02-26 20:28:39,697:INFO:Initializing predict_model()
2024-02-26 20:28:39,697:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016869B72290>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016869C5D6C0>)
2024-02-26 20:28:39,698:INFO:Checking exceptions
2024-02-26 20:28:39,698:INFO:Preloading libraries
2024-02-26 20:28:39,700:INFO:Set up data.
2024-02-26 20:28:39,705:INFO:Set up index.
2024-02-26 20:29:27,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:29:27,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:29:27,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:29:27,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:29:28,906:INFO:Initializing load_model()
2024-02-26 20:29:28,907:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 20:29:29,001:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\pycaret\internal\pipeline.py:146: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.2', 'setuptools': '69.0.3', 'pycaret': '3.3.0', 'IPython': '8.22.1', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.1.post1', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.0', 'setuptools': '68.2.2', 'pycaret': '3.3.0', 'IPython': '8.22.1', 'ipywidgets': '8.1.2', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.1.post1', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'AMD64'}}
  warnings.warn(

2024-02-26 20:29:32,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:29:32,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:29:32,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:29:32,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-26 20:29:33,809:INFO:Initializing load_model()
2024-02-26 20:29:33,809:INFO:load_model(model_name=model/final_model_mushroom, platform=None, authentication=None, verbose=True)
2024-02-26 20:29:33,900:WARNING:C:\Users\nasru\Desktop\AIML Projects\goitt\MLOPS\Skye\venv\lib\site-packages\pycaret\internal\pipeline.py:146: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.2', 'setuptools': '69.0.3', 'pycaret': '3.3.0', 'IPython': '8.22.1', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.1.post1', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.19.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.0', 'setuptools': '68.2.2', 'pycaret': '3.3.0', 'IPython': '8.22.1', 'ipywidgets': '8.1.2', 'tqdm': '4.66.1', 'numpy': '1.25.2', 'pandas': '2.1.4', 'jinja2': '3.1.3', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.1.post1', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.59.0', 'requests': '2.31.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'AMD64'}}
  warnings.warn(

2024-02-26 20:29:42,679:INFO:Initializing predict_model()
2024-02-26 20:29:42,679:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D4D49D1900>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cap-shape', 'cap-surface',
                                             'cap-color', 'bruises', 'odor'],
                                    transformer=SimpleImputer(strategy='most...
                ('onehot_encoding',
                 TransformerWrapper(include=['cap-shape', 'cap-surface',
                                             'cap-color', 'odor'],
                                    transformer=OneHotEncoder(cols=['cap-shape',
                                                                    'cap-surface',
                                                                    'cap-color',
                                                                    'odor'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D4D47ED630>)
2024-02-26 20:29:42,679:INFO:Checking exceptions
2024-02-26 20:29:42,679:INFO:Preloading libraries
2024-02-26 20:29:42,679:INFO:Set up data.
2024-02-26 20:29:42,683:INFO:Set up index.
